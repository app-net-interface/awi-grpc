/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.22.2
// source: network_policy_service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var network_policy_pb = require('./network_policy_pb.js')

var common_pb = require('./common_pb.js')
const proto = require('./network_policy_service_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.NetworkSLAServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.NetworkSLAServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.NetworkSLA,
 *   !proto.NetworkSLACreateResponse>}
 */
const methodDescriptor_NetworkSLAService_CreateNetworkSLA = new grpc.web.MethodDescriptor(
  '/NetworkSLAService/CreateNetworkSLA',
  grpc.web.MethodType.UNARY,
  network_policy_pb.NetworkSLA,
  proto.NetworkSLACreateResponse,
  /**
   * @param {!proto.NetworkSLA} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.NetworkSLACreateResponse.deserializeBinary
);


/**
 * @param {!proto.NetworkSLA} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.NetworkSLACreateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.NetworkSLACreateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.NetworkSLAServiceClient.prototype.createNetworkSLA =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/NetworkSLAService/CreateNetworkSLA',
      request,
      metadata || {},
      methodDescriptor_NetworkSLAService_CreateNetworkSLA,
      callback);
};


/**
 * @param {!proto.NetworkSLA} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.NetworkSLACreateResponse>}
 *     Promise that resolves to the response
 */
proto.NetworkSLAServicePromiseClient.prototype.createNetworkSLA =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/NetworkSLAService/CreateNetworkSLA',
      request,
      metadata || {},
      methodDescriptor_NetworkSLAService_CreateNetworkSLA);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.NetworkSLADeleteRequest,
 *   !proto.NetworkSLADeleteResponse>}
 */
const methodDescriptor_NetworkSLAService_DeleteNetworkSLA = new grpc.web.MethodDescriptor(
  '/NetworkSLAService/DeleteNetworkSLA',
  grpc.web.MethodType.UNARY,
  proto.NetworkSLADeleteRequest,
  proto.NetworkSLADeleteResponse,
  /**
   * @param {!proto.NetworkSLADeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.NetworkSLADeleteResponse.deserializeBinary
);


/**
 * @param {!proto.NetworkSLADeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.NetworkSLADeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.NetworkSLADeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.NetworkSLAServiceClient.prototype.deleteNetworkSLA =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/NetworkSLAService/DeleteNetworkSLA',
      request,
      metadata || {},
      methodDescriptor_NetworkSLAService_DeleteNetworkSLA,
      callback);
};


/**
 * @param {!proto.NetworkSLADeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.NetworkSLADeleteResponse>}
 *     Promise that resolves to the response
 */
proto.NetworkSLAServicePromiseClient.prototype.deleteNetworkSLA =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/NetworkSLAService/DeleteNetworkSLA',
      request,
      metadata || {},
      methodDescriptor_NetworkSLAService_DeleteNetworkSLA);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.NetworkSLAListReqest,
 *   !proto.NetworkSLAListResponse>}
 */
const methodDescriptor_NetworkSLAService_ListNetworkSLAs = new grpc.web.MethodDescriptor(
  '/NetworkSLAService/ListNetworkSLAs',
  grpc.web.MethodType.UNARY,
  proto.NetworkSLAListReqest,
  proto.NetworkSLAListResponse,
  /**
   * @param {!proto.NetworkSLAListReqest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.NetworkSLAListResponse.deserializeBinary
);


/**
 * @param {!proto.NetworkSLAListReqest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.NetworkSLAListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.NetworkSLAListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.NetworkSLAServiceClient.prototype.listNetworkSLAs =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/NetworkSLAService/ListNetworkSLAs',
      request,
      metadata || {},
      methodDescriptor_NetworkSLAService_ListNetworkSLAs,
      callback);
};


/**
 * @param {!proto.NetworkSLAListReqest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.NetworkSLAListResponse>}
 *     Promise that resolves to the response
 */
proto.NetworkSLAServicePromiseClient.prototype.listNetworkSLAs =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/NetworkSLAService/ListNetworkSLAs',
      request,
      metadata || {},
      methodDescriptor_NetworkSLAService_ListNetworkSLAs);
};


module.exports = proto;

