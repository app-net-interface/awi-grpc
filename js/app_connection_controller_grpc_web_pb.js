/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: app_connection_controller.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var app_connection_pb = require('./app_connection_pb.js')
const proto = require('./app_connection_controller_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.AppConnectionControllerClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.AppConnectionControllerPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.AppConnection,
 *   !proto.AppConnectionResponse>}
 */
const methodDescriptor_AppConnectionController_ConnectApps = new grpc.web.MethodDescriptor(
  '/AppConnectionController/ConnectApps',
  grpc.web.MethodType.UNARY,
  app_connection_pb.AppConnection,
  app_connection_pb.AppConnectionResponse,
  /**
   * @param {!proto.AppConnection} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.AppConnectionResponse.deserializeBinary
);


/**
 * @param {!proto.AppConnection} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.AppConnectionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.AppConnectionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.connectApps =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/ConnectApps',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_ConnectApps,
      callback);
};


/**
 * @param {!proto.AppConnection} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.AppConnectionResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.connectApps =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/ConnectApps',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_ConnectApps);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.AppDisconnectionRequest,
 *   !proto.AppDisconnectionResponse>}
 */
const methodDescriptor_AppConnectionController_DisconnectApps = new grpc.web.MethodDescriptor(
  '/AppConnectionController/DisconnectApps',
  grpc.web.MethodType.UNARY,
  app_connection_pb.AppDisconnectionRequest,
  app_connection_pb.AppDisconnectionResponse,
  /**
   * @param {!proto.AppDisconnectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.AppDisconnectionResponse.deserializeBinary
);


/**
 * @param {!proto.AppDisconnectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.AppDisconnectionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.AppDisconnectionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.disconnectApps =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/DisconnectApps',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_DisconnectApps,
      callback);
};


/**
 * @param {!proto.AppDisconnectionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.AppDisconnectionResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.disconnectApps =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/DisconnectApps',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_DisconnectApps);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetAppConnectionRequest,
 *   !proto.GetAppConnectionResponse>}
 */
const methodDescriptor_AppConnectionController_GetAppConnection = new grpc.web.MethodDescriptor(
  '/AppConnectionController/GetAppConnection',
  grpc.web.MethodType.UNARY,
  app_connection_pb.GetAppConnectionRequest,
  app_connection_pb.GetAppConnectionResponse,
  /**
   * @param {!proto.GetAppConnectionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.GetAppConnectionResponse.deserializeBinary
);


/**
 * @param {!proto.GetAppConnectionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.GetAppConnectionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.GetAppConnectionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.getAppConnection =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/GetAppConnection',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnection,
      callback);
};


/**
 * @param {!proto.GetAppConnectionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.GetAppConnectionResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.getAppConnection =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/GetAppConnection',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnection);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ListAppConnectionsRequest,
 *   !proto.ListAppConnectionsResponse>}
 */
const methodDescriptor_AppConnectionController_ListConnectedApps = new grpc.web.MethodDescriptor(
  '/AppConnectionController/ListConnectedApps',
  grpc.web.MethodType.UNARY,
  app_connection_pb.ListAppConnectionsRequest,
  app_connection_pb.ListAppConnectionsResponse,
  /**
   * @param {!proto.ListAppConnectionsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.ListAppConnectionsResponse.deserializeBinary
);


/**
 * @param {!proto.ListAppConnectionsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ListAppConnectionsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ListAppConnectionsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.listConnectedApps =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/ListConnectedApps',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_ListConnectedApps,
      callback);
};


/**
 * @param {!proto.ListAppConnectionsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ListAppConnectionsResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.listConnectedApps =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/ListConnectedApps',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_ListConnectedApps);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetAppConnectionStatusRequest,
 *   !proto.AppConnectionStatusResponse>}
 */
const methodDescriptor_AppConnectionController_GetAppConnectionStatus = new grpc.web.MethodDescriptor(
  '/AppConnectionController/GetAppConnectionStatus',
  grpc.web.MethodType.UNARY,
  app_connection_pb.GetAppConnectionStatusRequest,
  app_connection_pb.AppConnectionStatusResponse,
  /**
   * @param {!proto.GetAppConnectionStatusRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.AppConnectionStatusResponse.deserializeBinary
);


/**
 * @param {!proto.GetAppConnectionStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.AppConnectionStatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.AppConnectionStatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.getAppConnectionStatus =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionStatus',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionStatus,
      callback);
};


/**
 * @param {!proto.GetAppConnectionStatusRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.AppConnectionStatusResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.getAppConnectionStatus =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionStatus',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionStatus);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetAppConnectionStatisticsRequest,
 *   !proto.AppConnectionStatisticsResponse>}
 */
const methodDescriptor_AppConnectionController_GetAppConnectionStatistics = new grpc.web.MethodDescriptor(
  '/AppConnectionController/GetAppConnectionStatistics',
  grpc.web.MethodType.UNARY,
  app_connection_pb.GetAppConnectionStatisticsRequest,
  app_connection_pb.AppConnectionStatisticsResponse,
  /**
   * @param {!proto.GetAppConnectionStatisticsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.AppConnectionStatisticsResponse.deserializeBinary
);


/**
 * @param {!proto.GetAppConnectionStatisticsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.AppConnectionStatisticsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.AppConnectionStatisticsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.getAppConnectionStatistics =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionStatistics',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionStatistics,
      callback);
};


/**
 * @param {!proto.GetAppConnectionStatisticsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.AppConnectionStatisticsResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.getAppConnectionStatistics =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionStatistics',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionStatistics);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetAppConnectionEventsRequest,
 *   !proto.AppConnectionEventsResponse>}
 */
const methodDescriptor_AppConnectionController_GetAppConnectionEvents = new grpc.web.MethodDescriptor(
  '/AppConnectionController/GetAppConnectionEvents',
  grpc.web.MethodType.UNARY,
  app_connection_pb.GetAppConnectionEventsRequest,
  app_connection_pb.AppConnectionEventsResponse,
  /**
   * @param {!proto.GetAppConnectionEventsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.AppConnectionEventsResponse.deserializeBinary
);


/**
 * @param {!proto.GetAppConnectionEventsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.AppConnectionEventsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.AppConnectionEventsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.getAppConnectionEvents =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionEvents',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionEvents,
      callback);
};


/**
 * @param {!proto.GetAppConnectionEventsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.AppConnectionEventsResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.getAppConnectionEvents =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionEvents',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionEvents);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.AppConnection,
 *   !proto.GetMatchedResourcesResponse>}
 */
const methodDescriptor_AppConnectionController_GetMatchedResources = new grpc.web.MethodDescriptor(
  '/AppConnectionController/GetMatchedResources',
  grpc.web.MethodType.UNARY,
  app_connection_pb.AppConnection,
  app_connection_pb.GetMatchedResourcesResponse,
  /**
   * @param {!proto.AppConnection} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.GetMatchedResourcesResponse.deserializeBinary
);


/**
 * @param {!proto.AppConnection} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.GetMatchedResourcesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.GetMatchedResourcesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.getMatchedResources =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/GetMatchedResources',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetMatchedResources,
      callback);
};


/**
 * @param {!proto.AppConnection} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.GetMatchedResourcesResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.getMatchedResources =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/GetMatchedResources',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetMatchedResources);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CreateAppConnectionPolicyRequest,
 *   !proto.CreateAppConnectionPolicyResponse>}
 */
const methodDescriptor_AppConnectionController_CreateAppConnectionPolicy = new grpc.web.MethodDescriptor(
  '/AppConnectionController/CreateAppConnectionPolicy',
  grpc.web.MethodType.UNARY,
  app_connection_pb.CreateAppConnectionPolicyRequest,
  app_connection_pb.CreateAppConnectionPolicyResponse,
  /**
   * @param {!proto.CreateAppConnectionPolicyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.CreateAppConnectionPolicyResponse.deserializeBinary
);


/**
 * @param {!proto.CreateAppConnectionPolicyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CreateAppConnectionPolicyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CreateAppConnectionPolicyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.createAppConnectionPolicy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/CreateAppConnectionPolicy',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_CreateAppConnectionPolicy,
      callback);
};


/**
 * @param {!proto.CreateAppConnectionPolicyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CreateAppConnectionPolicyResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.createAppConnectionPolicy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/CreateAppConnectionPolicy',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_CreateAppConnectionPolicy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetAppConnectionPolicyRequest,
 *   !proto.GetAppConnectionPolicyResponse>}
 */
const methodDescriptor_AppConnectionController_GetAppConnectionPolicy = new grpc.web.MethodDescriptor(
  '/AppConnectionController/GetAppConnectionPolicy',
  grpc.web.MethodType.UNARY,
  app_connection_pb.GetAppConnectionPolicyRequest,
  app_connection_pb.GetAppConnectionPolicyResponse,
  /**
   * @param {!proto.GetAppConnectionPolicyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.GetAppConnectionPolicyResponse.deserializeBinary
);


/**
 * @param {!proto.GetAppConnectionPolicyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.GetAppConnectionPolicyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.GetAppConnectionPolicyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.getAppConnectionPolicy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionPolicy',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionPolicy,
      callback);
};


/**
 * @param {!proto.GetAppConnectionPolicyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.GetAppConnectionPolicyResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.getAppConnectionPolicy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/GetAppConnectionPolicy',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_GetAppConnectionPolicy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.DeleteAppConnectionPolicyRequest,
 *   !proto.DeleteAppConnectionPolicyResponse>}
 */
const methodDescriptor_AppConnectionController_DeleteAppConnectionPolicy = new grpc.web.MethodDescriptor(
  '/AppConnectionController/DeleteAppConnectionPolicy',
  grpc.web.MethodType.UNARY,
  app_connection_pb.DeleteAppConnectionPolicyRequest,
  app_connection_pb.DeleteAppConnectionPolicyResponse,
  /**
   * @param {!proto.DeleteAppConnectionPolicyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.DeleteAppConnectionPolicyResponse.deserializeBinary
);


/**
 * @param {!proto.DeleteAppConnectionPolicyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.DeleteAppConnectionPolicyResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.DeleteAppConnectionPolicyResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.deleteAppConnectionPolicy =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/DeleteAppConnectionPolicy',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_DeleteAppConnectionPolicy,
      callback);
};


/**
 * @param {!proto.DeleteAppConnectionPolicyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.DeleteAppConnectionPolicyResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.deleteAppConnectionPolicy =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/DeleteAppConnectionPolicy',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_DeleteAppConnectionPolicy);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ListAppConnectionPoliciesRequest,
 *   !proto.ListAppConnectionPoliciesResponse>}
 */
const methodDescriptor_AppConnectionController_ListAppConnectionPolicies = new grpc.web.MethodDescriptor(
  '/AppConnectionController/ListAppConnectionPolicies',
  grpc.web.MethodType.UNARY,
  app_connection_pb.ListAppConnectionPoliciesRequest,
  app_connection_pb.ListAppConnectionPoliciesResponse,
  /**
   * @param {!proto.ListAppConnectionPoliciesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  app_connection_pb.ListAppConnectionPoliciesResponse.deserializeBinary
);


/**
 * @param {!proto.ListAppConnectionPoliciesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ListAppConnectionPoliciesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ListAppConnectionPoliciesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.AppConnectionControllerClient.prototype.listAppConnectionPolicies =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/AppConnectionController/ListAppConnectionPolicies',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_ListAppConnectionPolicies,
      callback);
};


/**
 * @param {!proto.ListAppConnectionPoliciesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ListAppConnectionPoliciesResponse>}
 *     Promise that resolves to the response
 */
proto.AppConnectionControllerPromiseClient.prototype.listAppConnectionPolicies =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/AppConnectionController/ListAppConnectionPolicies',
      request,
      metadata || {},
      methodDescriptor_AppConnectionController_ListAppConnectionPolicies);
};


module.exports = proto;

