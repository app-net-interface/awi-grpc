// Copyright (c) 2023 Cisco Systems, Inc. and its affiliates
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http:www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.3
// source: network_domain_connection.proto

package awi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ConnectionMetadata            `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *NetworkDomainConnectionConfig `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionRequest) GetMetadata() *ConnectionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConnectionRequest) GetSpec() *NetworkDomainConnectionConfig {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Status       Status `protobuf:"varint,4,opt,name=status,proto3,enum=Status" json:"status,omitempty"` // Connection provisioning status : IN_PROGRESS, SUCCESS, FAILED
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionResponse) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ConnectionResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

type NetworkDomainConnectionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source              *NetworkDomainConnectionConfig_Source                      `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination         *NetworkDomainConnectionConfig_Destination                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	NetworkPolicy       *NetworkDomainConnectionConfig_NetworkPolicySelector       `protobuf:"bytes,3,opt,name=networkPolicy,proto3" json:"networkPolicy,omitempty"`
	SecurityPolicy      *NetworkDomainConnectionConfig_SecurityPolicySelector      `protobuf:"bytes,4,opt,name=securityPolicy,proto3" json:"securityPolicy,omitempty"`
	InspectionPolicy    *NetworkDomainConnectionConfig_InspectionPolicySelector    `protobuf:"bytes,5,opt,name=inspectionPolicy,proto3" json:"inspectionPolicy,omitempty"`
	AppConnectionPolicy *NetworkDomainConnectionConfig_AppConnectionPolicySelector `protobuf:"bytes,6,opt,name=appConnectionPolicy,proto3" json:"appConnectionPolicy,omitempty"`
	ObservabilityPolicy *NetworkDomainConnectionConfig_ObservabilityPolicySelector `protobuf:"bytes,7,opt,name=observabilityPolicy,proto3" json:"observabilityPolicy,omitempty"`
	CostPolicy          *NetworkDomainConnectionConfig_CostPolicySelector          `protobuf:"bytes,8,opt,name=costPolicy,proto3" json:"costPolicy,omitempty"`
	AccessPolicy        *NetworkDomainConnectionConfig_AccessPolicySelector        `protobuf:"bytes,9,opt,name=accessPolicy,proto3" json:"accessPolicy,omitempty"`
}

func (x *NetworkDomainConnectionConfig) Reset() {
	*x = NetworkDomainConnectionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkDomainConnectionConfig) GetSource() *NetworkDomainConnectionConfig_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetDestination() *NetworkDomainConnectionConfig_Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetNetworkPolicy() *NetworkDomainConnectionConfig_NetworkPolicySelector {
	if x != nil {
		return x.NetworkPolicy
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetSecurityPolicy() *NetworkDomainConnectionConfig_SecurityPolicySelector {
	if x != nil {
		return x.SecurityPolicy
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetInspectionPolicy() *NetworkDomainConnectionConfig_InspectionPolicySelector {
	if x != nil {
		return x.InspectionPolicy
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetAppConnectionPolicy() *NetworkDomainConnectionConfig_AppConnectionPolicySelector {
	if x != nil {
		return x.AppConnectionPolicy
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetObservabilityPolicy() *NetworkDomainConnectionConfig_ObservabilityPolicySelector {
	if x != nil {
		return x.ObservabilityPolicy
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetCostPolicy() *NetworkDomainConnectionConfig_CostPolicySelector {
	if x != nil {
		return x.CostPolicy
	}
	return nil
}

func (x *NetworkDomainConnectionConfig) GetAccessPolicy() *NetworkDomainConnectionConfig_AccessPolicySelector {
	if x != nil {
		return x.AccessPolicy
	}
	return nil
}

type ConnectionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels    map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConnectionMetadata) Reset() {
	*x = ConnectionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionMetadata) ProtoMessage() {}

func (x *ConnectionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionMetadata.ProtoReflect.Descriptor instead.
func (*ConnectionMetadata) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectionMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectionMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConnectionMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type DisconnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{4}
}

func (x *DisconnectRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type DisconnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId   string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionName string `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	Status         Status `protobuf:"varint,3,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
}

func (x *DisconnectResponse) Reset() {
	*x = DisconnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectResponse) ProtoMessage() {}

func (x *DisconnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectResponse.ProtoReflect.Descriptor instead.
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{5}
}

func (x *DisconnectResponse) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *DisconnectResponse) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *DisconnectResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

type GetConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *GetConnectionRequest) Reset() {
	*x = GetConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionRequest) ProtoMessage() {}

func (x *GetConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionRequest.ProtoReflect.Descriptor instead.
func (*GetConnectionRequest) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{6}
}

func (x *GetConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type ListConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListConnectionsRequest) Reset() {
	*x = ListConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsRequest) ProtoMessage() {}

func (x *ListConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{7}
}

type ListConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*ConnectionInformation `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	Error       *Error                   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ListConnectionsResponse) Reset() {
	*x = ListConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsResponse) ProtoMessage() {}

func (x *ListConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{8}
}

func (x *ListConnectionsResponse) GetConnections() []*ConnectionInformation {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *ListConnectionsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ConnectionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *ConnectionStatusRequest) Reset() {
	*x = ConnectionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStatusRequest) ProtoMessage() {}

func (x *ConnectionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStatusRequest.ProtoReflect.Descriptor instead.
func (*ConnectionStatusRequest) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectionStatusRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type ConnectionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionStatus Status `protobuf:"varint,1,opt,name=connection_status,json=connectionStatus,proto3,enum=Status" json:"connection_status,omitempty"`
	Error            *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ConnectionStatusResponse) Reset() {
	*x = ConnectionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStatusResponse) ProtoMessage() {}

func (x *ConnectionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStatusResponse.ProtoReflect.Descriptor instead.
func (*ConnectionStatusResponse) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{10}
}

func (x *ConnectionStatusResponse) GetConnectionStatus() Status {
	if x != nil {
		return x.ConnectionStatus
	}
	return Status_IN_PROGRESS
}

func (x *ConnectionStatusResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ConnectionInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata              *ConnectionMetadata            `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Source                *NetworkDomainObject           `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Destination           *NetworkDomainObject           `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	Config                *NetworkDomainConnectionConfig `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	Status                Status                         `protobuf:"varint,6,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	CreationTimestamp     string                         `protobuf:"bytes,7,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	ModificationTimestamp string                         `protobuf:"bytes,8,opt,name=modificationTimestamp,proto3" json:"modificationTimestamp,omitempty"`
}

func (x *ConnectionInformation) Reset() {
	*x = ConnectionInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInformation) ProtoMessage() {}

func (x *ConnectionInformation) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInformation.ProtoReflect.Descriptor instead.
func (*ConnectionInformation) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectionInformation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionInformation) GetMetadata() *ConnectionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConnectionInformation) GetSource() *NetworkDomainObject {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ConnectionInformation) GetDestination() *NetworkDomainObject {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *ConnectionInformation) GetConfig() *NetworkDomainConnectionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConnectionInformation) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

func (x *ConnectionInformation) GetCreationTimestamp() string {
	if x != nil {
		return x.CreationTimestamp
	}
	return ""
}

func (x *ConnectionInformation) GetModificationTimestamp() string {
	if x != nil {
		return x.ModificationTimestamp
	}
	return ""
}

type NetworkDomainConnectionConfig_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata      *NetworkDomainConnectionConfig_Metadata      `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NetworkDomain *NetworkDomainConnectionConfig_NetworkDomain `protobuf:"bytes,2,opt,name=networkDomain,proto3" json:"networkDomain,omitempty"`
}

func (x *NetworkDomainConnectionConfig_Source) Reset() {
	*x = NetworkDomainConnectionConfig_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_Source) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_Source) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_Source.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_Source) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 0}
}

func (x *NetworkDomainConnectionConfig_Source) GetMetadata() *NetworkDomainConnectionConfig_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NetworkDomainConnectionConfig_Source) GetNetworkDomain() *NetworkDomainConnectionConfig_NetworkDomain {
	if x != nil {
		return x.NetworkDomain
	}
	return nil
}

type NetworkDomainConnectionConfig_Destination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata      *NetworkDomainConnectionConfig_Metadata      `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NetworkDomain *NetworkDomainConnectionConfig_NetworkDomain `protobuf:"bytes,2,opt,name=networkDomain,proto3" json:"networkDomain,omitempty"`
}

func (x *NetworkDomainConnectionConfig_Destination) Reset() {
	*x = NetworkDomainConnectionConfig_Destination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_Destination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_Destination) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_Destination) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_Destination.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_Destination) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 1}
}

func (x *NetworkDomainConnectionConfig_Destination) GetMetadata() *NetworkDomainConnectionConfig_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NetworkDomainConnectionConfig_Destination) GetNetworkDomain() *NetworkDomainConnectionConfig_NetworkDomain {
	if x != nil {
		return x.NetworkDomain
	}
	return nil
}

type NetworkDomainConnectionConfig_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *NetworkDomainConnectionConfig_Metadata) Reset() {
	*x = NetworkDomainConnectionConfig_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_Metadata) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_Metadata.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_Metadata) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 2}
}

func (x *NetworkDomainConnectionConfig_Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkDomainConnectionConfig_Metadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type NetworkDomainConnectionConfig_NetworkDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector  *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	AccountID string                                  `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
}

func (x *NetworkDomainConnectionConfig_NetworkDomain) Reset() {
	*x = NetworkDomainConnectionConfig_NetworkDomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_NetworkDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_NetworkDomain) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_NetworkDomain) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_NetworkDomain.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_NetworkDomain) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 3}
}

func (x *NetworkDomainConnectionConfig_NetworkDomain) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *NetworkDomainConnectionConfig_NetworkDomain) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type NetworkDomainConnectionConfig_NetworkPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_NetworkPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_NetworkPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_NetworkPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_NetworkPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_NetworkPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_NetworkPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_NetworkPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 4}
}

func (x *NetworkDomainConnectionConfig_NetworkPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_SecurityPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_SecurityPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_SecurityPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_SecurityPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_SecurityPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_SecurityPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_SecurityPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_SecurityPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 5}
}

func (x *NetworkDomainConnectionConfig_SecurityPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_ObservabilityPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_ObservabilityPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_ObservabilityPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_ObservabilityPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_ObservabilityPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_ObservabilityPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_ObservabilityPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_ObservabilityPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 6}
}

func (x *NetworkDomainConnectionConfig_ObservabilityPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_CostPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_CostPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_CostPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_CostPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_CostPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_CostPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_CostPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_CostPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 7}
}

func (x *NetworkDomainConnectionConfig_CostPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_InspectionPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_InspectionPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_InspectionPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_InspectionPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_InspectionPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_InspectionPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_InspectionPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_InspectionPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 8}
}

func (x *NetworkDomainConnectionConfig_InspectionPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_AppConnectionPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_AppConnectionPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_AppConnectionPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_AppConnectionPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_AppConnectionPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_AppConnectionPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_AppConnectionPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_AppConnectionPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 9}
}

func (x *NetworkDomainConnectionConfig_AppConnectionPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_AccessPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnectionConfig_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnectionConfig_AccessPolicySelector) Reset() {
	*x = NetworkDomainConnectionConfig_AccessPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_AccessPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_AccessPolicySelector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_AccessPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_AccessPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_AccessPolicySelector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 10}
}

func (x *NetworkDomainConnectionConfig_AccessPolicySelector) GetSelector() *NetworkDomainConnectionConfig_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomainConnectionConfig_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName   *NetworkDomainConnectionConfig_MatchName `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchId     *NetworkDomainConnectionConfig_MatchId   `protobuf:"bytes,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	MatchLabels map[string]string                        `protobuf:"bytes,3,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchSite   *NetworkDomainConnectionConfig_MatchSite `protobuf:"bytes,4,opt,name=matchSite,proto3" json:"matchSite,omitempty"`
}

func (x *NetworkDomainConnectionConfig_Selector) Reset() {
	*x = NetworkDomainConnectionConfig_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_Selector) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_Selector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_Selector) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 11}
}

func (x *NetworkDomainConnectionConfig_Selector) GetMatchName() *NetworkDomainConnectionConfig_MatchName {
	if x != nil {
		return x.MatchName
	}
	return nil
}

func (x *NetworkDomainConnectionConfig_Selector) GetMatchId() *NetworkDomainConnectionConfig_MatchId {
	if x != nil {
		return x.MatchId
	}
	return nil
}

func (x *NetworkDomainConnectionConfig_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *NetworkDomainConnectionConfig_Selector) GetMatchSite() *NetworkDomainConnectionConfig_MatchSite {
	if x != nil {
		return x.MatchSite
	}
	return nil
}

type NetworkDomainConnectionConfig_MatchName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NetworkDomainConnectionConfig_MatchName) Reset() {
	*x = NetworkDomainConnectionConfig_MatchName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_MatchName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_MatchName) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_MatchName) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_MatchName.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_MatchName) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 12}
}

func (x *NetworkDomainConnectionConfig_MatchName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NetworkDomainConnectionConfig_MatchId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NetworkDomainConnectionConfig_MatchId) Reset() {
	*x = NetworkDomainConnectionConfig_MatchId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_MatchId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_MatchId) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_MatchId) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_MatchId.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_MatchId) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 13}
}

func (x *NetworkDomainConnectionConfig_MatchId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NetworkDomainConnectionConfig_MatchSite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NetworkDomainConnectionConfig_MatchSite) Reset() {
	*x = NetworkDomainConnectionConfig_MatchSite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_domain_connection_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnectionConfig_MatchSite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnectionConfig_MatchSite) ProtoMessage() {}

func (x *NetworkDomainConnectionConfig_MatchSite) ProtoReflect() protoreflect.Message {
	mi := &file_network_domain_connection_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnectionConfig_MatchSite.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnectionConfig_MatchSite) Descriptor() ([]byte, []int) {
	return file_network_domain_connection_proto_rawDescGZIP(), []int{2, 14}
}

func (x *NetworkDomainConnectionConfig_MatchSite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_network_domain_connection_proto protoreflect.FileDescriptor

var file_network_domain_connection_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x5a, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc9, 0x13, 0x0a, 0x1d,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x0d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x5d, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x63, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x6c, 0x0a, 0x13, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x13, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x6c, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x63,
	0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x57, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x1a, 0xa1, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x52, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0xa6, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0d, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a,
	0x40, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x72, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x5c, 0x0a, 0x15, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43,
	0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x5d, 0x0a, 0x16, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x62, 0x0a, 0x1b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x43, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x59, 0x0a, 0x12, 0x43, 0x6f, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x1a, 0x5f, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x62, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x43, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x5b, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43,
	0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0xf8, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x46, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x69, 0x74, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x74, 0x65, 0x1a, 0x3e,
	0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x1f,
	0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x19, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x1b, 0x0a, 0x09, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x37, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x83,
	0x01, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3e,
	0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6e,
	0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x11, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xfb,
	0x02, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x5a, 0x06,
	0x2e, 0x2f, 0x3b, 0x61, 0x77, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_domain_connection_proto_rawDescOnce sync.Once
	file_network_domain_connection_proto_rawDescData = file_network_domain_connection_proto_rawDesc
)

func file_network_domain_connection_proto_rawDescGZIP() []byte {
	file_network_domain_connection_proto_rawDescOnce.Do(func() {
		file_network_domain_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_domain_connection_proto_rawDescData)
	})
	return file_network_domain_connection_proto_rawDescData
}

var file_network_domain_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_network_domain_connection_proto_goTypes = []interface{}{
	(*ConnectionRequest)(nil),                                         // 0: ConnectionRequest
	(*ConnectionResponse)(nil),                                        // 1: ConnectionResponse
	(*NetworkDomainConnectionConfig)(nil),                             // 2: NetworkDomainConnectionConfig
	(*ConnectionMetadata)(nil),                                        // 3: ConnectionMetadata
	(*DisconnectRequest)(nil),                                         // 4: DisconnectRequest
	(*DisconnectResponse)(nil),                                        // 5: DisconnectResponse
	(*GetConnectionRequest)(nil),                                      // 6: GetConnectionRequest
	(*ListConnectionsRequest)(nil),                                    // 7: ListConnectionsRequest
	(*ListConnectionsResponse)(nil),                                   // 8: ListConnectionsResponse
	(*ConnectionStatusRequest)(nil),                                   // 9: ConnectionStatusRequest
	(*ConnectionStatusResponse)(nil),                                  // 10: ConnectionStatusResponse
	(*ConnectionInformation)(nil),                                     // 11: ConnectionInformation
	(*NetworkDomainConnectionConfig_Source)(nil),                      // 12: NetworkDomainConnectionConfig.Source
	(*NetworkDomainConnectionConfig_Destination)(nil),                 // 13: NetworkDomainConnectionConfig.Destination
	(*NetworkDomainConnectionConfig_Metadata)(nil),                    // 14: NetworkDomainConnectionConfig.Metadata
	(*NetworkDomainConnectionConfig_NetworkDomain)(nil),               // 15: NetworkDomainConnectionConfig.NetworkDomain
	(*NetworkDomainConnectionConfig_NetworkPolicySelector)(nil),       // 16: NetworkDomainConnectionConfig.NetworkPolicySelector
	(*NetworkDomainConnectionConfig_SecurityPolicySelector)(nil),      // 17: NetworkDomainConnectionConfig.SecurityPolicySelector
	(*NetworkDomainConnectionConfig_ObservabilityPolicySelector)(nil), // 18: NetworkDomainConnectionConfig.ObservabilityPolicySelector
	(*NetworkDomainConnectionConfig_CostPolicySelector)(nil),          // 19: NetworkDomainConnectionConfig.CostPolicySelector
	(*NetworkDomainConnectionConfig_InspectionPolicySelector)(nil),    // 20: NetworkDomainConnectionConfig.InspectionPolicySelector
	(*NetworkDomainConnectionConfig_AppConnectionPolicySelector)(nil), // 21: NetworkDomainConnectionConfig.AppConnectionPolicySelector
	(*NetworkDomainConnectionConfig_AccessPolicySelector)(nil),        // 22: NetworkDomainConnectionConfig.AccessPolicySelector
	(*NetworkDomainConnectionConfig_Selector)(nil),                    // 23: NetworkDomainConnectionConfig.Selector
	(*NetworkDomainConnectionConfig_MatchName)(nil),                   // 24: NetworkDomainConnectionConfig.MatchName
	(*NetworkDomainConnectionConfig_MatchId)(nil),                     // 25: NetworkDomainConnectionConfig.MatchId
	(*NetworkDomainConnectionConfig_MatchSite)(nil),                   // 26: NetworkDomainConnectionConfig.MatchSite
	nil,                         // 27: NetworkDomainConnectionConfig.Selector.MatchLabelsEntry
	nil,                         // 28: ConnectionMetadata.LabelsEntry
	(Status)(0),                 // 29: Status
	(*Error)(nil),               // 30: Error
	(*NetworkDomainObject)(nil), // 31: NetworkDomainObject
}
var file_network_domain_connection_proto_depIdxs = []int32{
	3,  // 0: ConnectionRequest.metadata:type_name -> ConnectionMetadata
	2,  // 1: ConnectionRequest.spec:type_name -> NetworkDomainConnectionConfig
	29, // 2: ConnectionResponse.status:type_name -> Status
	12, // 3: NetworkDomainConnectionConfig.source:type_name -> NetworkDomainConnectionConfig.Source
	13, // 4: NetworkDomainConnectionConfig.destination:type_name -> NetworkDomainConnectionConfig.Destination
	16, // 5: NetworkDomainConnectionConfig.networkPolicy:type_name -> NetworkDomainConnectionConfig.NetworkPolicySelector
	17, // 6: NetworkDomainConnectionConfig.securityPolicy:type_name -> NetworkDomainConnectionConfig.SecurityPolicySelector
	20, // 7: NetworkDomainConnectionConfig.inspectionPolicy:type_name -> NetworkDomainConnectionConfig.InspectionPolicySelector
	21, // 8: NetworkDomainConnectionConfig.appConnectionPolicy:type_name -> NetworkDomainConnectionConfig.AppConnectionPolicySelector
	18, // 9: NetworkDomainConnectionConfig.observabilityPolicy:type_name -> NetworkDomainConnectionConfig.ObservabilityPolicySelector
	19, // 10: NetworkDomainConnectionConfig.costPolicy:type_name -> NetworkDomainConnectionConfig.CostPolicySelector
	22, // 11: NetworkDomainConnectionConfig.accessPolicy:type_name -> NetworkDomainConnectionConfig.AccessPolicySelector
	28, // 12: ConnectionMetadata.labels:type_name -> ConnectionMetadata.LabelsEntry
	29, // 13: DisconnectResponse.status:type_name -> Status
	11, // 14: ListConnectionsResponse.connections:type_name -> ConnectionInformation
	30, // 15: ListConnectionsResponse.error:type_name -> Error
	29, // 16: ConnectionStatusResponse.connection_status:type_name -> Status
	30, // 17: ConnectionStatusResponse.error:type_name -> Error
	3,  // 18: ConnectionInformation.metadata:type_name -> ConnectionMetadata
	31, // 19: ConnectionInformation.source:type_name -> NetworkDomainObject
	31, // 20: ConnectionInformation.destination:type_name -> NetworkDomainObject
	2,  // 21: ConnectionInformation.config:type_name -> NetworkDomainConnectionConfig
	29, // 22: ConnectionInformation.status:type_name -> Status
	14, // 23: NetworkDomainConnectionConfig.Source.metadata:type_name -> NetworkDomainConnectionConfig.Metadata
	15, // 24: NetworkDomainConnectionConfig.Source.networkDomain:type_name -> NetworkDomainConnectionConfig.NetworkDomain
	14, // 25: NetworkDomainConnectionConfig.Destination.metadata:type_name -> NetworkDomainConnectionConfig.Metadata
	15, // 26: NetworkDomainConnectionConfig.Destination.networkDomain:type_name -> NetworkDomainConnectionConfig.NetworkDomain
	23, // 27: NetworkDomainConnectionConfig.NetworkDomain.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 28: NetworkDomainConnectionConfig.NetworkPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 29: NetworkDomainConnectionConfig.SecurityPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 30: NetworkDomainConnectionConfig.ObservabilityPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 31: NetworkDomainConnectionConfig.CostPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 32: NetworkDomainConnectionConfig.InspectionPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 33: NetworkDomainConnectionConfig.AppConnectionPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	23, // 34: NetworkDomainConnectionConfig.AccessPolicySelector.selector:type_name -> NetworkDomainConnectionConfig.Selector
	24, // 35: NetworkDomainConnectionConfig.Selector.matchName:type_name -> NetworkDomainConnectionConfig.MatchName
	25, // 36: NetworkDomainConnectionConfig.Selector.matchId:type_name -> NetworkDomainConnectionConfig.MatchId
	27, // 37: NetworkDomainConnectionConfig.Selector.matchLabels:type_name -> NetworkDomainConnectionConfig.Selector.MatchLabelsEntry
	26, // 38: NetworkDomainConnectionConfig.Selector.matchSite:type_name -> NetworkDomainConnectionConfig.MatchSite
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_network_domain_connection_proto_init() }
func file_network_domain_connection_proto_init() {
	if File_network_domain_connection_proto != nil {
		return
	}
	file_common_proto_init()
	file_network_domain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_network_domain_connection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_Destination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_NetworkDomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_NetworkPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_SecurityPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_ObservabilityPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_CostPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_InspectionPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_AppConnectionPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_AccessPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_MatchName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_MatchId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_domain_connection_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnectionConfig_MatchSite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_domain_connection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_network_domain_connection_proto_goTypes,
		DependencyIndexes: file_network_domain_connection_proto_depIdxs,
		MessageInfos:      file_network_domain_connection_proto_msgTypes,
	}.Build()
	File_network_domain_connection_proto = out.File
	file_network_domain_connection_proto_rawDesc = nil
	file_network_domain_connection_proto_goTypes = nil
	file_network_domain_connection_proto_depIdxs = nil
}
