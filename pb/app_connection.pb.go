// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.2
// source: app_connection.proto

package awi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Controller int32

const (
	Controller_Cisco_vManage          Controller = 0
	Controller_Cisco_Meraki_Dashboard Controller = 1
	Controller_Versa                  Controller = 2
	Controller_Juniper                Controller = 3
	Controller_Palo_Alto              Controller = 4
	Controller_Turnium                Controller = 5
	Controller_Tufin                  Controller = 6
	Controller_AWS_CloudWAN           Controller = 7
)

// Enum value maps for Controller.
var (
	Controller_name = map[int32]string{
		0: "Cisco_vManage",
		1: "Cisco_Meraki_Dashboard",
		2: "Versa",
		3: "Juniper",
		4: "Palo_Alto",
		5: "Turnium",
		6: "Tufin",
		7: "AWS_CloudWAN",
	}
	Controller_value = map[string]int32{
		"Cisco_vManage":          0,
		"Cisco_Meraki_Dashboard": 1,
		"Versa":                  2,
		"Juniper":                3,
		"Palo_Alto":              4,
		"Turnium":                5,
		"Tufin":                  6,
		"AWS_CloudWAN":           7,
	}
)

func (x Controller) Enum() *Controller {
	p := new(Controller)
	*p = x
	return p
}

func (x Controller) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Controller) Descriptor() protoreflect.EnumDescriptor {
	return file_app_connection_proto_enumTypes[0].Descriptor()
}

func (Controller) Type() protoreflect.EnumType {
	return &file_app_connection_proto_enumTypes[0]
}

func (x Controller) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Controller.Descriptor instead.
func (Controller) EnumDescriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{0}
}

type AccessType int32

const (
	AccessType_ALLOW AccessType = 0
	AccessType_DENY  AccessType = 1
)

// Enum value maps for AccessType.
var (
	AccessType_name = map[int32]string{
		0: "ALLOW",
		1: "DENY",
	}
	AccessType_value = map[string]int32{
		"ALLOW": 0,
		"DENY":  1,
	}
)

func (x AccessType) Enum() *AccessType {
	p := new(AccessType)
	*p = x
	return p
}

func (x AccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_connection_proto_enumTypes[1].Descriptor()
}

func (AccessType) Type() protoreflect.EnumType {
	return &file_app_connection_proto_enumTypes[1]
}

func (x AccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessType.Descriptor instead.
func (AccessType) EnumDescriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{1}
}

type Kind int32

const (
	Kind_VM        Kind = 0
	Kind_CONTAINER Kind = 1
	Kind_POD       Kind = 2
)

// Enum value maps for Kind.
var (
	Kind_name = map[int32]string{
		0: "VM",
		1: "CONTAINER",
		2: "POD",
	}
	Kind_value = map[string]int32{
		"VM":        0,
		"CONTAINER": 1,
		"POD":       2,
	}
)

func (x Kind) Enum() *Kind {
	p := new(Kind)
	*p = x
	return p
}

func (x Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_app_connection_proto_enumTypes[2].Descriptor()
}

func (Kind) Type() protoreflect.EnumType {
	return &file_app_connection_proto_enumTypes[2]
}

func (x Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kind.Descriptor instead.
func (Kind) EnumDescriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{2}
}

type AppConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Don't use enums for now as they are problematic in CRD spec build
	Controller              string                   `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Metadata                *AppMetadata             `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	From                    *From                    `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                      *To                      `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	AccessPolicy            *AccessPolicySelector    `protobuf:"bytes,5,opt,name=accessPolicy,proto3" json:"accessPolicy,omitempty"`
	NetworkDomainConnection *NetworkDomainConnection `protobuf:"bytes,6,opt,name=networkDomainConnection,proto3" json:"networkDomainConnection,omitempty"`
	NetworkPolicy           *NetworkPolicySelector   `protobuf:"bytes,7,opt,name=networkPolicy,proto3" json:"networkPolicy,omitempty"`
}

func (x *AppConnection) Reset() {
	*x = AppConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnection) ProtoMessage() {}

func (x *AppConnection) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnection.ProtoReflect.Descriptor instead.
func (*AppConnection) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{0}
}

func (x *AppConnection) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *AppConnection) GetMetadata() *AppMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AppConnection) GetFrom() *From {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *AppConnection) GetTo() *To {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *AppConnection) GetAccessPolicy() *AccessPolicySelector {
	if x != nil {
		return x.AccessPolicy
	}
	return nil
}

func (x *AppConnection) GetNetworkDomainConnection() *NetworkDomainConnection {
	if x != nil {
		return x.NetworkDomainConnection
	}
	return nil
}

func (x *AppConnection) GetNetworkPolicy() *NetworkPolicySelector {
	if x != nil {
		return x.NetworkPolicy
	}
	return nil
}

type AppMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description           string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Label                 map[string]string `protobuf:"bytes,3,rep,name=label,proto3" json:"label,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreationTimestamp     string            `protobuf:"bytes,4,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	ModificationTimestamp string            `protobuf:"bytes,5,opt,name=modificationTimestamp,proto3" json:"modificationTimestamp,omitempty"`
}

func (x *AppMetadata) Reset() {
	*x = AppMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMetadata) ProtoMessage() {}

func (x *AppMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMetadata.ProtoReflect.Descriptor instead.
func (*AppMetadata) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{1}
}

func (x *AppMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppMetadata) GetLabel() map[string]string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *AppMetadata) GetCreationTimestamp() string {
	if x != nil {
		return x.CreationTimestamp
	}
	return ""
}

func (x *AppMetadata) GetModificationTimestamp() string {
	if x != nil {
		return x.ModificationTimestamp
	}
	return ""
}

type From struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint      *Endpoint      `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Subnet        *AppSubnet     `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Namespace     *Namespace     `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SGT           *SGT           `protobuf:"bytes,4,opt,name=SGT,proto3" json:"SGT,omitempty"`
	Cluster       *Cluster       `protobuf:"bytes,5,opt,name=cluster,proto3" json:"cluster,omitempty"`
	NetworkDomain *NetworkDomain `protobuf:"bytes,6,opt,name=networkDomain,proto3" json:"networkDomain,omitempty"`
}

func (x *From) Reset() {
	*x = From{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From) ProtoMessage() {}

func (x *From) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From.ProtoReflect.Descriptor instead.
func (*From) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{2}
}

func (x *From) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *From) GetSubnet() *AppSubnet {
	if x != nil {
		return x.Subnet
	}
	return nil
}

func (x *From) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *From) GetSGT() *SGT {
	if x != nil {
		return x.SGT
	}
	return nil
}

func (x *From) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *From) GetNetworkDomain() *NetworkDomain {
	if x != nil {
		return x.NetworkDomain
	}
	return nil
}

type To struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint         *Endpoint      `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Subnet           *AppSubnet     `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Namespace        *Namespace     `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Service          *Service       `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	ExternalEntities []string       `protobuf:"bytes,5,rep,name=externalEntities,proto3" json:"externalEntities,omitempty"`
	Cluster          *Cluster       `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	NetworkDomain    *NetworkDomain `protobuf:"bytes,7,opt,name=networkDomain,proto3" json:"networkDomain,omitempty"`
}

func (x *To) Reset() {
	*x = To{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To) ProtoMessage() {}

func (x *To) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To.ProtoReflect.Descriptor instead.
func (*To) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{3}
}

func (x *To) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *To) GetSubnet() *AppSubnet {
	if x != nil {
		return x.Subnet
	}
	return nil
}

func (x *To) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *To) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *To) GetExternalEntities() []string {
	if x != nil {
		return x.ExternalEntities
	}
	return nil
}

func (x *To) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *To) GetNetworkDomain() *NetworkDomain {
	if x != nil {
		return x.NetworkDomain
	}
	return nil
}

type MatchName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MatchName) Reset() {
	*x = MatchName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchName) ProtoMessage() {}

func (x *MatchName) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchName.ProtoReflect.Descriptor instead.
func (*MatchName) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{4}
}

func (x *MatchName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MatchNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MatchNamespace) Reset() {
	*x = MatchNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchNamespace) ProtoMessage() {}

func (x *MatchNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchNamespace.ProtoReflect.Descriptor instead.
func (*MatchNamespace) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{5}
}

func (x *MatchNamespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MatchCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MatchCluster) Reset() {
	*x = MatchCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCluster) ProtoMessage() {}

func (x *MatchCluster) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCluster.ProtoReflect.Descriptor instead.
func (*MatchCluster) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{6}
}

func (x *MatchCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MatchId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MatchId) Reset() {
	*x = MatchId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchId) ProtoMessage() {}

func (x *MatchId) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchId.ProtoReflect.Descriptor instead.
func (*MatchId) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{7}
}

func (x *MatchId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MatchOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *MatchOwner) Reset() {
	*x = MatchOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchOwner) ProtoMessage() {}

func (x *MatchOwner) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchOwner.ProtoReflect.Descriptor instead.
func (*MatchOwner) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{8}
}

func (x *MatchOwner) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type MatchHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *MatchHost) Reset() {
	*x = MatchHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchHost) ProtoMessage() {}

func (x *MatchHost) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchHost.ProtoReflect.Descriptor instead.
func (*MatchHost) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{9}
}

func (x *MatchHost) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind     string             `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Selector *Endpoint_Selector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{10}
}

func (x *Endpoint) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Endpoint) GetSelector() *Endpoint_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type MatchExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator string   `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Values   []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MatchExpression) Reset() {
	*x = MatchExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchExpression) ProtoMessage() {}

func (x *MatchExpression) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchExpression.ProtoReflect.Descriptor instead.
func (*MatchExpression) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{11}
}

func (x *MatchExpression) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MatchExpression) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *MatchExpression) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type AppSubnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *AppSubnet_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *AppSubnet) Reset() {
	*x = AppSubnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSubnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSubnet) ProtoMessage() {}

func (x *AppSubnet) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSubnet.ProtoReflect.Descriptor instead.
func (*AppSubnet) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{12}
}

func (x *AppSubnet) GetSelector() *AppSubnet_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *Namespace_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{13}
}

func (x *Namespace) GetSelector() *Namespace_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type SGT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SGT) Reset() {
	*x = SGT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGT) ProtoMessage() {}

func (x *SGT) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGT.ProtoReflect.Descriptor instead.
func (*SGT) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{14}
}

func (x *SGT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ServiceKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K8SService *ServiceKind_K8SService `protobuf:"bytes,1,opt,name=k8sService,proto3" json:"k8sService,omitempty"`
	VmService  *ServiceKind_VMService  `protobuf:"bytes,2,opt,name=vmService,proto3" json:"vmService,omitempty"`
}

func (x *ServiceKind) Reset() {
	*x = ServiceKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceKind) ProtoMessage() {}

func (x *ServiceKind) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceKind.ProtoReflect.Descriptor instead.
func (*ServiceKind) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{15}
}

func (x *ServiceKind) GetK8SService() *ServiceKind_K8SService {
	if x != nil {
		return x.K8SService
	}
	return nil
}

func (x *ServiceKind) GetVmService() *ServiceKind_VMService {
	if x != nil {
		return x.VmService
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind     *ServiceKind      `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Selector *Service_Selector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{16}
}

func (x *Service) GetKind() *ServiceKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Service) GetSelector() *Service_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *Cluster_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{17}
}

func (x *Cluster) GetSelector() *Cluster_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// VPC or VRF
	Kind     string                  `protobuf:"bytes,1,opt,name=Kind,proto3" json:"Kind,omitempty"`
	Selector *NetworkDomain_Selector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomain) Reset() {
	*x = NetworkDomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomain) ProtoMessage() {}

func (x *NetworkDomain) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomain.ProtoReflect.Descriptor instead.
func (*NetworkDomain) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{18}
}

func (x *NetworkDomain) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *NetworkDomain) GetSelector() *NetworkDomain_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type AccessPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *AccessPolicySelector_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *AccessPolicySelector) Reset() {
	*x = AccessPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicySelector) ProtoMessage() {}

func (x *AccessPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicySelector.ProtoReflect.Descriptor instead.
func (*AccessPolicySelector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{19}
}

func (x *AccessPolicySelector) GetSelector() *AccessPolicySelector_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkPolicySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkPolicySelector_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkPolicySelector) Reset() {
	*x = NetworkPolicySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPolicySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicySelector) ProtoMessage() {}

func (x *NetworkPolicySelector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPolicySelector.ProtoReflect.Descriptor instead.
func (*NetworkPolicySelector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{20}
}

func (x *NetworkPolicySelector) GetSelector() *NetworkPolicySelector_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkAccessControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port     string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *NetworkAccessControl) Reset() {
	*x = NetworkAccessControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkAccessControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkAccessControl) ProtoMessage() {}

func (x *NetworkAccessControl) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkAccessControl.ProtoReflect.Descriptor instead.
func (*NetworkAccessControl) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{21}
}

func (x *NetworkAccessControl) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkAccessControl) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type NetworkDomainConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkDomainConnection_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkDomainConnection) Reset() {
	*x = NetworkDomainConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnection) ProtoMessage() {}

func (x *NetworkDomainConnection) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnection.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnection) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{22}
}

func (x *NetworkDomainConnection) GetSelector() *NetworkDomainConnection_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type NetworkPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *NetworkPolicy_Selector `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *NetworkPolicy) Reset() {
	*x = NetworkPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicy) ProtoMessage() {}

func (x *NetworkPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPolicy.ProtoReflect.Descriptor instead.
func (*NetworkPolicy) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{23}
}

func (x *NetworkPolicy) GetSelector() *NetworkPolicy_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type AppConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error                     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
	AppConnId      string                     `protobuf:"bytes,2,opt,name=app_conn_id,json=appConnId,proto3" json:"app_conn_id,omitempty"`
	AppConnName    string                     `protobuf:"bytes,3,opt,name=app_conn_name,json=appConnName,proto3" json:"app_conn_name,omitempty"`
	Status         Status                     `protobuf:"varint,4,opt,name=status,proto3,enum=Status" json:"status,omitempty"` // Connection provisioning status : IN_PROGRESS, SUCCESS, FAILED
	ConnectionMeta *AppConnectionResponseMeta `protobuf:"bytes,6,opt,name=connection_meta,json=connectionMeta,proto3" json:"connection_meta,omitempty"`
}

func (x *AppConnectionResponse) Reset() {
	*x = AppConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionResponse) ProtoMessage() {}

func (x *AppConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionResponse.ProtoReflect.Descriptor instead.
func (*AppConnectionResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{24}
}

func (x *AppConnectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AppConnectionResponse) GetAppConnId() string {
	if x != nil {
		return x.AppConnId
	}
	return ""
}

func (x *AppConnectionResponse) GetAppConnName() string {
	if x != nil {
		return x.AppConnName
	}
	return ""
}

func (x *AppConnectionResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

func (x *AppConnectionResponse) GetConnectionMeta() *AppConnectionResponseMeta {
	if x != nil {
		return x.ConnectionMeta
	}
	return nil
}

type GetAppConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error         *Error                    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
	AppConnection *AppConnectionInformation `protobuf:"bytes,2,opt,name=app_connection,json=appConnection,proto3" json:"app_connection,omitempty"`
}

func (x *GetAppConnectionResponse) Reset() {
	*x = GetAppConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionResponse) ProtoMessage() {}

func (x *GetAppConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionResponse.ProtoReflect.Descriptor instead.
func (*GetAppConnectionResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{25}
}

func (x *GetAppConnectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppConnectionResponse) GetAppConnection() *AppConnectionInformation {
	if x != nil {
		return x.AppConnection
	}
	return nil
}

// disconnect
type AppDisconnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *AppDisconnectionRequest) Reset() {
	*x = AppDisconnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDisconnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDisconnectionRequest) ProtoMessage() {}

func (x *AppDisconnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDisconnectionRequest.ProtoReflect.Descriptor instead.
func (*AppDisconnectionRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{26}
}

func (x *AppDisconnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type AppDisconnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ConnectionId   string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionName string `protobuf:"bytes,3,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	// AccessControl response code
	Status Status `protobuf:"varint,4,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
}

func (x *AppDisconnectionResponse) Reset() {
	*x = AppDisconnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDisconnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDisconnectionResponse) ProtoMessage() {}

func (x *AppDisconnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDisconnectionResponse.ProtoReflect.Descriptor instead.
func (*AppDisconnectionResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{27}
}

func (x *AppDisconnectionResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AppDisconnectionResponse) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *AppDisconnectionResponse) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *AppDisconnectionResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

type AppConnectionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
	AppConnId   string `protobuf:"bytes,2,opt,name=app_conn_id,json=appConnId,proto3" json:"app_conn_id,omitempty"`
	AppConnName string `protobuf:"bytes,3,opt,name=app_conn_name,json=appConnName,proto3" json:"app_conn_name,omitempty"`
	Status      Status `protobuf:"varint,4,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
}

func (x *AppConnectionStatusResponse) Reset() {
	*x = AppConnectionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionStatusResponse) ProtoMessage() {}

func (x *AppConnectionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionStatusResponse.ProtoReflect.Descriptor instead.
func (*AppConnectionStatusResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{28}
}

func (x *AppConnectionStatusResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AppConnectionStatusResponse) GetAppConnId() string {
	if x != nil {
		return x.AppConnId
	}
	return ""
}

func (x *AppConnectionStatusResponse) GetAppConnName() string {
	if x != nil {
		return x.AppConnName
	}
	return ""
}

func (x *AppConnectionStatusResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

type AppConnectionStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
}

func (x *AppConnectionStatistics) Reset() {
	*x = AppConnectionStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionStatistics) ProtoMessage() {}

func (x *AppConnectionStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionStatistics.ProtoReflect.Descriptor instead.
func (*AppConnectionStatistics) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{29}
}

func (x *AppConnectionStatistics) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AppConnectionStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error                   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
	AppConnId   string                   `protobuf:"bytes,2,opt,name=app_conn_id,json=appConnId,proto3" json:"app_conn_id,omitempty"`
	AppConnName string                   `protobuf:"bytes,3,opt,name=app_conn_name,json=appConnName,proto3" json:"app_conn_name,omitempty"`
	Stats       *AppConnectionStatistics `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *AppConnectionStatisticsResponse) Reset() {
	*x = AppConnectionStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionStatisticsResponse) ProtoMessage() {}

func (x *AppConnectionStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionStatisticsResponse.ProtoReflect.Descriptor instead.
func (*AppConnectionStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{30}
}

func (x *AppConnectionStatisticsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AppConnectionStatisticsResponse) GetAppConnId() string {
	if x != nil {
		return x.AppConnId
	}
	return ""
}

func (x *AppConnectionStatisticsResponse) GetAppConnName() string {
	if x != nil {
		return x.AppConnName
	}
	return ""
}

func (x *AppConnectionStatisticsResponse) GetStats() *AppConnectionStatistics {
	if x != nil {
		return x.Stats
	}
	return nil
}

type AppConnectionEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
}

func (x *AppConnectionEvents) Reset() {
	*x = AppConnectionEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionEvents) ProtoMessage() {}

func (x *AppConnectionEvents) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionEvents.ProtoReflect.Descriptor instead.
func (*AppConnectionEvents) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{31}
}

func (x *AppConnectionEvents) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AppConnectionEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       *Error               `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // request response code
	AppConnId   string               `protobuf:"bytes,2,opt,name=app_conn_id,json=appConnId,proto3" json:"app_conn_id,omitempty"`
	AppConnName string               `protobuf:"bytes,3,opt,name=app_conn_name,json=appConnName,proto3" json:"app_conn_name,omitempty"`
	Events      *AppConnectionEvents `protobuf:"bytes,4,opt,name=events,proto3" json:"events,omitempty"`
}

func (x *AppConnectionEventsResponse) Reset() {
	*x = AppConnectionEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionEventsResponse) ProtoMessage() {}

func (x *AppConnectionEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionEventsResponse.ProtoReflect.Descriptor instead.
func (*AppConnectionEventsResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{32}
}

func (x *AppConnectionEventsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AppConnectionEventsResponse) GetAppConnId() string {
	if x != nil {
		return x.AppConnId
	}
	return ""
}

func (x *AppConnectionEventsResponse) GetAppConnName() string {
	if x != nil {
		return x.AppConnName
	}
	return ""
}

func (x *AppConnectionEventsResponse) GetEvents() *AppConnectionEvents {
	if x != nil {
		return x.Events
	}
	return nil
}

// GetConnection() - need a service registry integration
type GetAppConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *GetAppConnectionRequest) Reset() {
	*x = GetAppConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionRequest) ProtoMessage() {}

func (x *GetAppConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionRequest.ProtoReflect.Descriptor instead.
func (*GetAppConnectionRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{33}
}

func (x *GetAppConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type GetAppConnectionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *GetAppConnectionStatusRequest) Reset() {
	*x = GetAppConnectionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionStatusRequest) ProtoMessage() {}

func (x *GetAppConnectionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetAppConnectionStatusRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{34}
}

func (x *GetAppConnectionStatusRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type GetAppConnectionStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *GetAppConnectionStatisticsRequest) Reset() {
	*x = GetAppConnectionStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionStatisticsRequest) ProtoMessage() {}

func (x *GetAppConnectionStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetAppConnectionStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{35}
}

func (x *GetAppConnectionStatisticsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type GetAppConnectionEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *GetAppConnectionEventsRequest) Reset() {
	*x = GetAppConnectionEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionEventsRequest) ProtoMessage() {}

func (x *GetAppConnectionEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionEventsRequest.ProtoReflect.Descriptor instead.
func (*GetAppConnectionEventsRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{36}
}

func (x *GetAppConnectionEventsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type ListAppConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAppConnectionsRequest) Reset() {
	*x = ListAppConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppConnectionsRequest) ProtoMessage() {}

func (x *ListAppConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListAppConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{37}
}

type ListAppConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          *Error                      `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	AppConnections []*AppConnectionInformation `protobuf:"bytes,2,rep,name=app_connections,json=appConnections,proto3" json:"app_connections,omitempty"`
}

func (x *ListAppConnectionsResponse) Reset() {
	*x = ListAppConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppConnectionsResponse) ProtoMessage() {}

func (x *ListAppConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListAppConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{38}
}

func (x *ListAppConnectionsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListAppConnectionsResponse) GetAppConnections() []*AppConnectionInformation {
	if x != nil {
		return x.AppConnections
	}
	return nil
}

type MatchedResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchedInstances []*Instance   `protobuf:"bytes,1,rep,name=matchedInstances,proto3" json:"matchedInstances,omitempty"`
	MatchedPods      []*Pod        `protobuf:"bytes,2,rep,name=matchedPods,proto3" json:"matchedPods,omitempty"`
	MatchedSubnets   []*Subnet     `protobuf:"bytes,3,rep,name=matchedSubnets,proto3" json:"matchedSubnets,omitempty"`
	MatchedServices  []*K8SService `protobuf:"bytes,4,rep,name=matchedServices,proto3" json:"matchedServices,omitempty"`
}

func (x *MatchedResources) Reset() {
	*x = MatchedResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchedResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchedResources) ProtoMessage() {}

func (x *MatchedResources) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchedResources.ProtoReflect.Descriptor instead.
func (*MatchedResources) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{39}
}

func (x *MatchedResources) GetMatchedInstances() []*Instance {
	if x != nil {
		return x.MatchedInstances
	}
	return nil
}

func (x *MatchedResources) GetMatchedPods() []*Pod {
	if x != nil {
		return x.MatchedPods
	}
	return nil
}

func (x *MatchedResources) GetMatchedSubnets() []*Subnet {
	if x != nil {
		return x.MatchedSubnets
	}
	return nil
}

func (x *MatchedResources) GetMatchedServices() []*K8SService {
	if x != nil {
		return x.MatchedServices
	}
	return nil
}

type AppConnectionInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppConnectionConfig         *AppConnection    `protobuf:"bytes,2,opt,name=appConnectionConfig,proto3" json:"appConnectionConfig,omitempty"`
	Status                      Status            `protobuf:"varint,3,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	NetworkDomainConnectionName string            `protobuf:"bytes,4,opt,name=NetworkDomainConnectionName,proto3" json:"NetworkDomainConnectionName,omitempty"`
	SourceMatched               *MatchedResources `protobuf:"bytes,5,opt,name=sourceMatched,proto3" json:"sourceMatched,omitempty"`
	DestinationMatched          *MatchedResources `protobuf:"bytes,6,opt,name=destinationMatched,proto3" json:"destinationMatched,omitempty"`
}

func (x *AppConnectionInformation) Reset() {
	*x = AppConnectionInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionInformation) ProtoMessage() {}

func (x *AppConnectionInformation) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionInformation.ProtoReflect.Descriptor instead.
func (*AppConnectionInformation) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{40}
}

func (x *AppConnectionInformation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppConnectionInformation) GetAppConnectionConfig() *AppConnection {
	if x != nil {
		return x.AppConnectionConfig
	}
	return nil
}

func (x *AppConnectionInformation) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IN_PROGRESS
}

func (x *AppConnectionInformation) GetNetworkDomainConnectionName() string {
	if x != nil {
		return x.NetworkDomainConnectionName
	}
	return ""
}

func (x *AppConnectionInformation) GetSourceMatched() *MatchedResources {
	if x != nil {
		return x.SourceMatched
	}
	return nil
}

func (x *AppConnectionInformation) GetDestinationMatched() *MatchedResources {
	if x != nil {
		return x.DestinationMatched
	}
	return nil
}

type GetMatchedResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceMatched      *MatchedResources `protobuf:"bytes,1,opt,name=sourceMatched,proto3" json:"sourceMatched,omitempty"`
	DestinationMatched *MatchedResources `protobuf:"bytes,2,opt,name=destinationMatched,proto3" json:"destinationMatched,omitempty"`
}

func (x *GetMatchedResourcesResponse) Reset() {
	*x = GetMatchedResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchedResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchedResourcesResponse) ProtoMessage() {}

func (x *GetMatchedResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchedResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetMatchedResourcesResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{41}
}

func (x *GetMatchedResourcesResponse) GetSourceMatched() *MatchedResources {
	if x != nil {
		return x.SourceMatched
	}
	return nil
}

func (x *GetMatchedResourcesResponse) GetDestinationMatched() *MatchedResources {
	if x != nil {
		return x.DestinationMatched
	}
	return nil
}

type AppConnectionPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppConnection *AppConnection `protobuf:"bytes,2,opt,name=app_connection,json=appConnection,proto3" json:"app_connection,omitempty"`
}

func (x *AppConnectionPolicy) Reset() {
	*x = AppConnectionPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionPolicy) ProtoMessage() {}

func (x *AppConnectionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionPolicy.ProtoReflect.Descriptor instead.
func (*AppConnectionPolicy) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{42}
}

func (x *AppConnectionPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppConnectionPolicy) GetAppConnection() *AppConnection {
	if x != nil {
		return x.AppConnection
	}
	return nil
}

type CreateAppConnectionPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppConnection *AppConnection `protobuf:"bytes,1,opt,name=app_connection,json=appConnection,proto3" json:"app_connection,omitempty"`
}

func (x *CreateAppConnectionPolicyRequest) Reset() {
	*x = CreateAppConnectionPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppConnectionPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppConnectionPolicyRequest) ProtoMessage() {}

func (x *CreateAppConnectionPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppConnectionPolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateAppConnectionPolicyRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{43}
}

func (x *CreateAppConnectionPolicyRequest) GetAppConnection() *AppConnection {
	if x != nil {
		return x.AppConnection
	}
	return nil
}

type CreateAppConnectionPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateAppConnectionPolicyResponse) Reset() {
	*x = CreateAppConnectionPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppConnectionPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppConnectionPolicyResponse) ProtoMessage() {}

func (x *CreateAppConnectionPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppConnectionPolicyResponse.ProtoReflect.Descriptor instead.
func (*CreateAppConnectionPolicyResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{44}
}

func (x *CreateAppConnectionPolicyResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateAppConnectionPolicyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAppConnectionPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAppConnectionPolicyRequest) Reset() {
	*x = GetAppConnectionPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionPolicyRequest) ProtoMessage() {}

func (x *GetAppConnectionPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetAppConnectionPolicyRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{45}
}

func (x *GetAppConnectionPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAppConnectionPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppConnectionPolicy *AppConnectionPolicy `protobuf:"bytes,1,opt,name=app_connection_policy,json=appConnectionPolicy,proto3" json:"app_connection_policy,omitempty"`
}

func (x *GetAppConnectionPolicyResponse) Reset() {
	*x = GetAppConnectionPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConnectionPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConnectionPolicyResponse) ProtoMessage() {}

func (x *GetAppConnectionPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConnectionPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetAppConnectionPolicyResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{46}
}

func (x *GetAppConnectionPolicyResponse) GetAppConnectionPolicy() *AppConnectionPolicy {
	if x != nil {
		return x.AppConnectionPolicy
	}
	return nil
}

type DeleteAppConnectionPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAppConnectionPolicyRequest) Reset() {
	*x = DeleteAppConnectionPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppConnectionPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppConnectionPolicyRequest) ProtoMessage() {}

func (x *DeleteAppConnectionPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppConnectionPolicyRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppConnectionPolicyRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteAppConnectionPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAppConnectionPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteAppConnectionPolicyResponse) Reset() {
	*x = DeleteAppConnectionPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppConnectionPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppConnectionPolicyResponse) ProtoMessage() {}

func (x *DeleteAppConnectionPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppConnectionPolicyResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppConnectionPolicyResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteAppConnectionPolicyResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListAppConnectionPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAppConnectionPoliciesRequest) Reset() {
	*x = ListAppConnectionPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppConnectionPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppConnectionPoliciesRequest) ProtoMessage() {}

func (x *ListAppConnectionPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppConnectionPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListAppConnectionPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{49}
}

type ListAppConnectionPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppConnectionPolicies []*AppConnectionPolicy `protobuf:"bytes,1,rep,name=app_connection_policies,json=appConnectionPolicies,proto3" json:"app_connection_policies,omitempty"`
}

func (x *ListAppConnectionPoliciesResponse) Reset() {
	*x = ListAppConnectionPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppConnectionPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppConnectionPoliciesResponse) ProtoMessage() {}

func (x *ListAppConnectionPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppConnectionPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListAppConnectionPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{50}
}

func (x *ListAppConnectionPoliciesResponse) GetAppConnectionPolicies() []*AppConnectionPolicy {
	if x != nil {
		return x.AppConnectionPolicies
	}
	return nil
}

type Endpoint_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchLabels      map[string]string  `protobuf:"bytes,1,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchExpressions []*MatchExpression `protobuf:"bytes,2,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
	MatchCluster     *MatchCluster      `protobuf:"bytes,3,opt,name=matchCluster,proto3" json:"matchCluster,omitempty"`
	MatchNamespace   *MatchNamespace    `protobuf:"bytes,4,opt,name=matchNamespace,proto3" json:"matchNamespace,omitempty"`
	MatchName        *MatchName         `protobuf:"bytes,5,opt,name=matchName,proto3" json:"matchName,omitempty"`
}

func (x *Endpoint_Selector) Reset() {
	*x = Endpoint_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint_Selector) ProtoMessage() {}

func (x *Endpoint_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint_Selector.ProtoReflect.Descriptor instead.
func (*Endpoint_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Endpoint_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *Endpoint_Selector) GetMatchExpressions() []*MatchExpression {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

func (x *Endpoint_Selector) GetMatchCluster() *MatchCluster {
	if x != nil {
		return x.MatchCluster
	}
	return nil
}

func (x *Endpoint_Selector) GetMatchNamespace() *MatchNamespace {
	if x != nil {
		return x.MatchNamespace
	}
	return nil
}

func (x *Endpoint_Selector) GetMatchName() *MatchName {
	if x != nil {
		return x.MatchName
	}
	return nil
}

type AppSubnet_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchLabels      map[string]string  `protobuf:"bytes,1,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchPrefix      []string           `protobuf:"bytes,2,rep,name=matchPrefix,proto3" json:"matchPrefix,omitempty"`
	MatchExpressions []*MatchExpression `protobuf:"bytes,3,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
}

func (x *AppSubnet_Selector) Reset() {
	*x = AppSubnet_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSubnet_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSubnet_Selector) ProtoMessage() {}

func (x *AppSubnet_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSubnet_Selector.ProtoReflect.Descriptor instead.
func (*AppSubnet_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{12, 0}
}

func (x *AppSubnet_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *AppSubnet_Selector) GetMatchPrefix() []string {
	if x != nil {
		return x.MatchPrefix
	}
	return nil
}

func (x *AppSubnet_Selector) GetMatchExpressions() []*MatchExpression {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

type Namespace_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName        string             `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchLabels      map[string]string  `protobuf:"bytes,2,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchExpressions []*MatchExpression `protobuf:"bytes,3,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
}

func (x *Namespace_Selector) Reset() {
	*x = Namespace_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace_Selector) ProtoMessage() {}

func (x *Namespace_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace_Selector.ProtoReflect.Descriptor instead.
func (*Namespace_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Namespace_Selector) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *Namespace_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *Namespace_Selector) GetMatchExpressions() []*MatchExpression {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

type ServiceKind_K8SService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType string `protobuf:"bytes,2,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
}

func (x *ServiceKind_K8SService) Reset() {
	*x = ServiceKind_K8SService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceKind_K8SService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceKind_K8SService) ProtoMessage() {}

func (x *ServiceKind_K8SService) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceKind_K8SService.ProtoReflect.Descriptor instead.
func (*ServiceKind_K8SService) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ServiceKind_K8SService) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

type ServiceKind_VMService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType string `protobuf:"bytes,1,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
}

func (x *ServiceKind_VMService) Reset() {
	*x = ServiceKind_VMService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceKind_VMService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceKind_VMService) ProtoMessage() {}

func (x *ServiceKind_VMService) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceKind_VMService.ProtoReflect.Descriptor instead.
func (*ServiceKind_VMService) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{15, 1}
}

func (x *ServiceKind_VMService) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

type Service_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName        *MatchName         `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchNamespace   *MatchNamespace    `protobuf:"bytes,2,opt,name=matchNamespace,proto3" json:"matchNamespace,omitempty"`
	MatchCluster     *MatchCluster      `protobuf:"bytes,3,opt,name=matchCluster,proto3" json:"matchCluster,omitempty"`
	MatchLabels      map[string]string  `protobuf:"bytes,4,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchHost        *MatchHost         `protobuf:"bytes,5,opt,name=matchHost,proto3" json:"matchHost,omitempty"`
	MatchExpressions []*MatchExpression `protobuf:"bytes,6,rep,name=matchExpressions,proto3" json:"matchExpressions,omitempty"`
}

func (x *Service_Selector) Reset() {
	*x = Service_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service_Selector) ProtoMessage() {}

func (x *Service_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service_Selector.ProtoReflect.Descriptor instead.
func (*Service_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Service_Selector) GetMatchName() *MatchName {
	if x != nil {
		return x.MatchName
	}
	return nil
}

func (x *Service_Selector) GetMatchNamespace() *MatchNamespace {
	if x != nil {
		return x.MatchNamespace
	}
	return nil
}

func (x *Service_Selector) GetMatchCluster() *MatchCluster {
	if x != nil {
		return x.MatchCluster
	}
	return nil
}

func (x *Service_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *Service_Selector) GetMatchHost() *MatchHost {
	if x != nil {
		return x.MatchHost
	}
	return nil
}

func (x *Service_Selector) GetMatchExpressions() []*MatchExpression {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

type Cluster_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName   *MatchName        `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchLabels map[string]string `protobuf:"bytes,2,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Cluster_Selector) Reset() {
	*x = Cluster_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Selector) ProtoMessage() {}

func (x *Cluster_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Selector.ProtoReflect.Descriptor instead.
func (*Cluster_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{17, 0}
}

func (x *Cluster_Selector) GetMatchName() *MatchName {
	if x != nil {
		return x.MatchName
	}
	return nil
}

func (x *Cluster_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

type NetworkDomain_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MatchID     *MatchId          `protobuf:"bytes,2,opt,name=matchID,proto3" json:"matchID,omitempty"`
	MatchName   *MatchName        `protobuf:"bytes,3,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchOwner  *MatchOwner       `protobuf:"bytes,4,opt,name=matchOwner,proto3" json:"matchOwner,omitempty"`
}

func (x *NetworkDomain_Selector) Reset() {
	*x = NetworkDomain_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomain_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomain_Selector) ProtoMessage() {}

func (x *NetworkDomain_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomain_Selector.ProtoReflect.Descriptor instead.
func (*NetworkDomain_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{18, 0}
}

func (x *NetworkDomain_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *NetworkDomain_Selector) GetMatchID() *MatchId {
	if x != nil {
		return x.MatchID
	}
	return nil
}

func (x *NetworkDomain_Selector) GetMatchName() *MatchName {
	if x != nil {
		return x.MatchName
	}
	return nil
}

func (x *NetworkDomain_Selector) GetMatchOwner() *MatchOwner {
	if x != nil {
		return x.MatchOwner
	}
	return nil
}

type AccessPolicySelector_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName   *AccessPolicySelector_MatchName `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MatchId     *AccessPolicySelector_MatchId   `protobuf:"bytes,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	MatchLabels map[string]string               `protobuf:"bytes,3,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AccessPolicySelector_Selector) Reset() {
	*x = AccessPolicySelector_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicySelector_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicySelector_Selector) ProtoMessage() {}

func (x *AccessPolicySelector_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicySelector_Selector.ProtoReflect.Descriptor instead.
func (*AccessPolicySelector_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{19, 0}
}

func (x *AccessPolicySelector_Selector) GetMatchName() *AccessPolicySelector_MatchName {
	if x != nil {
		return x.MatchName
	}
	return nil
}

func (x *AccessPolicySelector_Selector) GetMatchId() *AccessPolicySelector_MatchId {
	if x != nil {
		return x.MatchId
	}
	return nil
}

func (x *AccessPolicySelector_Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

type AccessPolicySelector_MatchName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AccessPolicySelector_MatchName) Reset() {
	*x = AccessPolicySelector_MatchName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicySelector_MatchName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicySelector_MatchName) ProtoMessage() {}

func (x *AccessPolicySelector_MatchName) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicySelector_MatchName.ProtoReflect.Descriptor instead.
func (*AccessPolicySelector_MatchName) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{19, 1}
}

func (x *AccessPolicySelector_MatchName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AccessPolicySelector_MatchId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AccessPolicySelector_MatchId) Reset() {
	*x = AccessPolicySelector_MatchId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicySelector_MatchId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicySelector_MatchId) ProtoMessage() {}

func (x *AccessPolicySelector_MatchId) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicySelector_MatchId.ProtoReflect.Descriptor instead.
func (*AccessPolicySelector_MatchId) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{19, 2}
}

func (x *AccessPolicySelector_MatchId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NetworkPolicySelector_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName string `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
}

func (x *NetworkPolicySelector_Selector) Reset() {
	*x = NetworkPolicySelector_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPolicySelector_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicySelector_Selector) ProtoMessage() {}

func (x *NetworkPolicySelector_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPolicySelector_Selector.ProtoReflect.Descriptor instead.
func (*NetworkPolicySelector_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{20, 0}
}

func (x *NetworkPolicySelector_Selector) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

type NetworkDomainConnection_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName string `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
}

func (x *NetworkDomainConnection_Selector) Reset() {
	*x = NetworkDomainConnection_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkDomainConnection_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDomainConnection_Selector) ProtoMessage() {}

func (x *NetworkDomainConnection_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDomainConnection_Selector.ProtoReflect.Descriptor instead.
func (*NetworkDomainConnection_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{22, 0}
}

func (x *NetworkDomainConnection_Selector) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

type NetworkPolicy_Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchName string `protobuf:"bytes,1,opt,name=matchName,proto3" json:"matchName,omitempty"`
}

func (x *NetworkPolicy_Selector) Reset() {
	*x = NetworkPolicy_Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPolicy_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicy_Selector) ProtoMessage() {}

func (x *NetworkPolicy_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPolicy_Selector.ProtoReflect.Descriptor instead.
func (*NetworkPolicy_Selector) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{23, 0}
}

func (x *NetworkPolicy_Selector) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

type AppConnectionResponseMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppConnDirection        string `protobuf:"bytes,1,opt,name=app_conn_direction,json=appConnDirection,proto3" json:"app_conn_direction,omitempty"`                      // Egres, ingress, bi-directional
	ConnectionSourceIp      string `protobuf:"bytes,2,opt,name=connection_source_ip,json=connectionSourceIp,proto3" json:"connection_source_ip,omitempty"`                // Source IP of the connection
	ConnectionDestIp        string `protobuf:"bytes,3,opt,name=connection_dest_ip,json=connectionDestIp,proto3" json:"connection_dest_ip,omitempty"`                      // Destination IP of the connection
	ConnectionSourceTag     string `protobuf:"bytes,4,opt,name=connection_source_tag,json=connectionSourceTag,proto3" json:"connection_source_tag,omitempty"`             // Source IP of the connection
	ConnectionDestTag       string `protobuf:"bytes,5,opt,name=connection_dest_tag,json=connectionDestTag,proto3" json:"connection_dest_tag,omitempty"`                   // Destination IP of the connection
	ConnectionStatusUrl     string `protobuf:"bytes,6,opt,name=connection_status_url,json=connectionStatusUrl,proto3" json:"connection_status_url,omitempty"`             // URL to get connection status
	ConnectionStatisticsUrl string `protobuf:"bytes,7,opt,name=connection_statistics_url,json=connectionStatisticsUrl,proto3" json:"connection_statistics_url,omitempty"` // URL to get connection statistics
	ConnectionEventsUrl     string `protobuf:"bytes,8,opt,name=connection_events_url,json=connectionEventsUrl,proto3" json:"connection_events_url,omitempty"`             // URL to get connection events
}

func (x *AppConnectionResponseMeta) Reset() {
	*x = AppConnectionResponseMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_connection_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConnectionResponseMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConnectionResponseMeta) ProtoMessage() {}

func (x *AppConnectionResponseMeta) ProtoReflect() protoreflect.Message {
	mi := &file_app_connection_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConnectionResponseMeta.ProtoReflect.Descriptor instead.
func (*AppConnectionResponseMeta) Descriptor() ([]byte, []int) {
	return file_app_connection_proto_rawDescGZIP(), []int{24, 0}
}

func (x *AppConnectionResponseMeta) GetAppConnDirection() string {
	if x != nil {
		return x.AppConnDirection
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionSourceIp() string {
	if x != nil {
		return x.ConnectionSourceIp
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionDestIp() string {
	if x != nil {
		return x.ConnectionDestIp
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionSourceTag() string {
	if x != nil {
		return x.ConnectionSourceTag
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionDestTag() string {
	if x != nil {
		return x.ConnectionDestTag
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionStatusUrl() string {
	if x != nil {
		return x.ConnectionStatusUrl
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionStatisticsUrl() string {
	if x != nil {
		return x.ConnectionStatisticsUrl
	}
	return ""
}

func (x *AppConnectionResponseMeta) GetConnectionEventsUrl() string {
	if x != nil {
		return x.ConnectionEventsUrl
	}
	return ""
}

var File_app_connection_proto protoreflect.FileDescriptor

var file_app_connection_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x02, 0x0a, 0x0d, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x13, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x54,
	0x6f, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x52, 0x0a, 0x17, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x90, 0x02, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x38, 0x0a, 0x0a, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x25,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x53, 0x47, 0x54, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x04, 0x2e, 0x53, 0x47, 0x54, 0x52, 0x03, 0x53, 0x47, 0x54, 0x12, 0x22, 0x0a, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x02, 0x54, 0x6f, 0x12, 0x25, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52,
	0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x1f, 0x0a, 0x09, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x22, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x22, 0xb6, 0x03, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0xe5, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x45, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57, 0x0a, 0x0f, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0xf2, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3c, 0x0a, 0x10, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xad, 0x02, 0x0a, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0xee, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x19, 0x0a, 0x03, 0x53, 0x47, 0x54, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x6b, 0x38, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4b, 0x69, 0x6e, 0x64, 0x2e, 0x4b, 0x38, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x0a, 0x6b, 0x38, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09,
	0x76, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x2e, 0x56, 0x4d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x09, 0x76, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x2e, 0x0a, 0x0a, 0x4b, 0x38, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x2d, 0x0a, 0x09, 0x56, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xeb, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x2d, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x8e,
	0x03, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x31,
	0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xf5, 0x01, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0xba, 0x01, 0x0a, 0x08, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x02, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x33, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x91, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x4a, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x03, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x3a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x95, 0x02, 0x0a, 0x08,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x51, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x1f, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x19, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x7e, 0x0a, 0x15, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x28, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x46, 0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x28, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x0d,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x33, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x28, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xff, 0x04, 0x0a,
	0x15, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x1a,
	0x9c, 0x03, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x74, 0x49, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x54, 0x61, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x3a,
	0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x7a,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x17, 0x41, 0x70,
	0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x18, 0x41,
	0x70, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xb3, 0x01, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x1b,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7e,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd9,
	0x01, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0b, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x04, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x50, 0x6f,
	0x64, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4b,
	0x38, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xcb, 0x02, 0x0a, 0x18, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0d,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x12, 0x41, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a,
	0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x15, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x13, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x32, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x21, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x21,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x17, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x15, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2a,
	0x8c, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x11,
	0x0a, 0x0d, 0x43, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x76, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x4d, 0x65, 0x72, 0x61, 0x6b,
	0x69, 0x5f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x65, 0x72, 0x73, 0x61, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x75, 0x6e, 0x69,
	0x70, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x6c, 0x6f, 0x5f, 0x41, 0x6c,
	0x74, 0x6f, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x75, 0x72, 0x6e, 0x69, 0x75, 0x6d, 0x10,
	0x05, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x75, 0x66, 0x69, 0x6e, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x57, 0x53, 0x5f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x41, 0x4e, 0x10, 0x07, 0x2a, 0x21,
	0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x4e, 0x59, 0x10,
	0x01, 0x2a, 0x26, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x4d, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x50, 0x4f, 0x44, 0x10, 0x02, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b,
	0x61, 0x77, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_connection_proto_rawDescOnce sync.Once
	file_app_connection_proto_rawDescData = file_app_connection_proto_rawDesc
)

func file_app_connection_proto_rawDescGZIP() []byte {
	file_app_connection_proto_rawDescOnce.Do(func() {
		file_app_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_connection_proto_rawDescData)
	})
	return file_app_connection_proto_rawDescData
}

var file_app_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_app_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_app_connection_proto_goTypes = []interface{}{
	(Controller)(0),                           // 0: Controller
	(AccessType)(0),                           // 1: AccessType
	(Kind)(0),                                 // 2: Kind
	(*AppConnection)(nil),                     // 3: AppConnection
	(*AppMetadata)(nil),                       // 4: AppMetadata
	(*From)(nil),                              // 5: From
	(*To)(nil),                                // 6: To
	(*MatchName)(nil),                         // 7: MatchName
	(*MatchNamespace)(nil),                    // 8: MatchNamespace
	(*MatchCluster)(nil),                      // 9: MatchCluster
	(*MatchId)(nil),                           // 10: MatchId
	(*MatchOwner)(nil),                        // 11: MatchOwner
	(*MatchHost)(nil),                         // 12: MatchHost
	(*Endpoint)(nil),                          // 13: Endpoint
	(*MatchExpression)(nil),                   // 14: MatchExpression
	(*AppSubnet)(nil),                         // 15: AppSubnet
	(*Namespace)(nil),                         // 16: Namespace
	(*SGT)(nil),                               // 17: SGT
	(*ServiceKind)(nil),                       // 18: ServiceKind
	(*Service)(nil),                           // 19: Service
	(*Cluster)(nil),                           // 20: Cluster
	(*NetworkDomain)(nil),                     // 21: NetworkDomain
	(*AccessPolicySelector)(nil),              // 22: AccessPolicySelector
	(*NetworkPolicySelector)(nil),             // 23: NetworkPolicySelector
	(*NetworkAccessControl)(nil),              // 24: NetworkAccessControl
	(*NetworkDomainConnection)(nil),           // 25: NetworkDomainConnection
	(*NetworkPolicy)(nil),                     // 26: NetworkPolicy
	(*AppConnectionResponse)(nil),             // 27: AppConnectionResponse
	(*GetAppConnectionResponse)(nil),          // 28: GetAppConnectionResponse
	(*AppDisconnectionRequest)(nil),           // 29: AppDisconnectionRequest
	(*AppDisconnectionResponse)(nil),          // 30: AppDisconnectionResponse
	(*AppConnectionStatusResponse)(nil),       // 31: AppConnectionStatusResponse
	(*AppConnectionStatistics)(nil),           // 32: AppConnectionStatistics
	(*AppConnectionStatisticsResponse)(nil),   // 33: AppConnectionStatisticsResponse
	(*AppConnectionEvents)(nil),               // 34: AppConnectionEvents
	(*AppConnectionEventsResponse)(nil),       // 35: AppConnectionEventsResponse
	(*GetAppConnectionRequest)(nil),           // 36: GetAppConnectionRequest
	(*GetAppConnectionStatusRequest)(nil),     // 37: GetAppConnectionStatusRequest
	(*GetAppConnectionStatisticsRequest)(nil), // 38: GetAppConnectionStatisticsRequest
	(*GetAppConnectionEventsRequest)(nil),     // 39: GetAppConnectionEventsRequest
	(*ListAppConnectionsRequest)(nil),         // 40: ListAppConnectionsRequest
	(*ListAppConnectionsResponse)(nil),        // 41: ListAppConnectionsResponse
	(*MatchedResources)(nil),                  // 42: MatchedResources
	(*AppConnectionInformation)(nil),          // 43: AppConnectionInformation
	(*GetMatchedResourcesResponse)(nil),       // 44: GetMatchedResourcesResponse
	(*AppConnectionPolicy)(nil),               // 45: AppConnectionPolicy
	(*CreateAppConnectionPolicyRequest)(nil),  // 46: CreateAppConnectionPolicyRequest
	(*CreateAppConnectionPolicyResponse)(nil), // 47: CreateAppConnectionPolicyResponse
	(*GetAppConnectionPolicyRequest)(nil),     // 48: GetAppConnectionPolicyRequest
	(*GetAppConnectionPolicyResponse)(nil),    // 49: GetAppConnectionPolicyResponse
	(*DeleteAppConnectionPolicyRequest)(nil),  // 50: DeleteAppConnectionPolicyRequest
	(*DeleteAppConnectionPolicyResponse)(nil), // 51: DeleteAppConnectionPolicyResponse
	(*ListAppConnectionPoliciesRequest)(nil),  // 52: ListAppConnectionPoliciesRequest
	(*ListAppConnectionPoliciesResponse)(nil), // 53: ListAppConnectionPoliciesResponse
	nil,                                      // 54: AppMetadata.LabelEntry
	(*Endpoint_Selector)(nil),                // 55: Endpoint.Selector
	nil,                                      // 56: Endpoint.Selector.MatchLabelsEntry
	(*AppSubnet_Selector)(nil),               // 57: AppSubnet.Selector
	nil,                                      // 58: AppSubnet.Selector.MatchLabelsEntry
	(*Namespace_Selector)(nil),               // 59: Namespace.Selector
	nil,                                      // 60: Namespace.Selector.MatchLabelsEntry
	(*ServiceKind_K8SService)(nil),           // 61: ServiceKind.K8SService
	(*ServiceKind_VMService)(nil),            // 62: ServiceKind.VMService
	(*Service_Selector)(nil),                 // 63: Service.Selector
	nil,                                      // 64: Service.Selector.MatchLabelsEntry
	(*Cluster_Selector)(nil),                 // 65: Cluster.Selector
	nil,                                      // 66: Cluster.Selector.MatchLabelsEntry
	(*NetworkDomain_Selector)(nil),           // 67: NetworkDomain.Selector
	nil,                                      // 68: NetworkDomain.Selector.MatchLabelsEntry
	(*AccessPolicySelector_Selector)(nil),    // 69: AccessPolicySelector.Selector
	(*AccessPolicySelector_MatchName)(nil),   // 70: AccessPolicySelector.MatchName
	(*AccessPolicySelector_MatchId)(nil),     // 71: AccessPolicySelector.MatchId
	nil,                                      // 72: AccessPolicySelector.Selector.MatchLabelsEntry
	(*NetworkPolicySelector_Selector)(nil),   // 73: NetworkPolicySelector.Selector
	(*NetworkDomainConnection_Selector)(nil), // 74: NetworkDomainConnection.Selector
	(*NetworkPolicy_Selector)(nil),           // 75: NetworkPolicy.Selector
	(*AppConnectionResponseMeta)(nil),        // 76: AppConnectionResponse.meta
	(*Error)(nil),                            // 77: Error
	(Status)(0),                              // 78: Status
	(*Instance)(nil),                         // 79: Instance
	(*Pod)(nil),                              // 80: Pod
	(*Subnet)(nil),                           // 81: Subnet
	(*K8SService)(nil),                       // 82: K8sService
}
var file_app_connection_proto_depIdxs = []int32{
	4,  // 0: AppConnection.metadata:type_name -> AppMetadata
	5,  // 1: AppConnection.from:type_name -> From
	6,  // 2: AppConnection.to:type_name -> To
	22, // 3: AppConnection.accessPolicy:type_name -> AccessPolicySelector
	25, // 4: AppConnection.networkDomainConnection:type_name -> NetworkDomainConnection
	23, // 5: AppConnection.networkPolicy:type_name -> NetworkPolicySelector
	54, // 6: AppMetadata.label:type_name -> AppMetadata.LabelEntry
	13, // 7: From.endpoint:type_name -> Endpoint
	15, // 8: From.subnet:type_name -> AppSubnet
	16, // 9: From.namespace:type_name -> Namespace
	17, // 10: From.SGT:type_name -> SGT
	20, // 11: From.cluster:type_name -> Cluster
	21, // 12: From.networkDomain:type_name -> NetworkDomain
	13, // 13: To.endpoint:type_name -> Endpoint
	15, // 14: To.subnet:type_name -> AppSubnet
	16, // 15: To.namespace:type_name -> Namespace
	19, // 16: To.service:type_name -> Service
	20, // 17: To.cluster:type_name -> Cluster
	21, // 18: To.networkDomain:type_name -> NetworkDomain
	55, // 19: Endpoint.selector:type_name -> Endpoint.Selector
	57, // 20: AppSubnet.selector:type_name -> AppSubnet.Selector
	59, // 21: Namespace.selector:type_name -> Namespace.Selector
	61, // 22: ServiceKind.k8sService:type_name -> ServiceKind.K8SService
	62, // 23: ServiceKind.vmService:type_name -> ServiceKind.VMService
	18, // 24: Service.kind:type_name -> ServiceKind
	63, // 25: Service.selector:type_name -> Service.Selector
	65, // 26: Cluster.selector:type_name -> Cluster.Selector
	67, // 27: NetworkDomain.selector:type_name -> NetworkDomain.Selector
	69, // 28: AccessPolicySelector.selector:type_name -> AccessPolicySelector.Selector
	73, // 29: NetworkPolicySelector.selector:type_name -> NetworkPolicySelector.Selector
	74, // 30: NetworkDomainConnection.selector:type_name -> NetworkDomainConnection.Selector
	75, // 31: NetworkPolicy.selector:type_name -> NetworkPolicy.Selector
	77, // 32: AppConnectionResponse.error:type_name -> Error
	78, // 33: AppConnectionResponse.status:type_name -> Status
	76, // 34: AppConnectionResponse.connection_meta:type_name -> AppConnectionResponse.meta
	77, // 35: GetAppConnectionResponse.error:type_name -> Error
	43, // 36: GetAppConnectionResponse.app_connection:type_name -> AppConnectionInformation
	77, // 37: AppDisconnectionResponse.error:type_name -> Error
	78, // 38: AppDisconnectionResponse.status:type_name -> Status
	77, // 39: AppConnectionStatusResponse.error:type_name -> Error
	78, // 40: AppConnectionStatusResponse.status:type_name -> Status
	77, // 41: AppConnectionStatistics.error:type_name -> Error
	77, // 42: AppConnectionStatisticsResponse.error:type_name -> Error
	32, // 43: AppConnectionStatisticsResponse.stats:type_name -> AppConnectionStatistics
	77, // 44: AppConnectionEvents.error:type_name -> Error
	77, // 45: AppConnectionEventsResponse.error:type_name -> Error
	34, // 46: AppConnectionEventsResponse.events:type_name -> AppConnectionEvents
	77, // 47: ListAppConnectionsResponse.error:type_name -> Error
	43, // 48: ListAppConnectionsResponse.app_connections:type_name -> AppConnectionInformation
	79, // 49: MatchedResources.matchedInstances:type_name -> Instance
	80, // 50: MatchedResources.matchedPods:type_name -> Pod
	81, // 51: MatchedResources.matchedSubnets:type_name -> Subnet
	82, // 52: MatchedResources.matchedServices:type_name -> K8sService
	3,  // 53: AppConnectionInformation.appConnectionConfig:type_name -> AppConnection
	78, // 54: AppConnectionInformation.status:type_name -> Status
	42, // 55: AppConnectionInformation.sourceMatched:type_name -> MatchedResources
	42, // 56: AppConnectionInformation.destinationMatched:type_name -> MatchedResources
	42, // 57: GetMatchedResourcesResponse.sourceMatched:type_name -> MatchedResources
	42, // 58: GetMatchedResourcesResponse.destinationMatched:type_name -> MatchedResources
	3,  // 59: AppConnectionPolicy.app_connection:type_name -> AppConnection
	3,  // 60: CreateAppConnectionPolicyRequest.app_connection:type_name -> AppConnection
	45, // 61: GetAppConnectionPolicyResponse.app_connection_policy:type_name -> AppConnectionPolicy
	45, // 62: ListAppConnectionPoliciesResponse.app_connection_policies:type_name -> AppConnectionPolicy
	56, // 63: Endpoint.Selector.matchLabels:type_name -> Endpoint.Selector.MatchLabelsEntry
	14, // 64: Endpoint.Selector.matchExpressions:type_name -> MatchExpression
	9,  // 65: Endpoint.Selector.matchCluster:type_name -> MatchCluster
	8,  // 66: Endpoint.Selector.matchNamespace:type_name -> MatchNamespace
	7,  // 67: Endpoint.Selector.matchName:type_name -> MatchName
	58, // 68: AppSubnet.Selector.matchLabels:type_name -> AppSubnet.Selector.MatchLabelsEntry
	14, // 69: AppSubnet.Selector.matchExpressions:type_name -> MatchExpression
	60, // 70: Namespace.Selector.matchLabels:type_name -> Namespace.Selector.MatchLabelsEntry
	14, // 71: Namespace.Selector.matchExpressions:type_name -> MatchExpression
	7,  // 72: Service.Selector.matchName:type_name -> MatchName
	8,  // 73: Service.Selector.matchNamespace:type_name -> MatchNamespace
	9,  // 74: Service.Selector.matchCluster:type_name -> MatchCluster
	64, // 75: Service.Selector.matchLabels:type_name -> Service.Selector.MatchLabelsEntry
	12, // 76: Service.Selector.matchHost:type_name -> MatchHost
	14, // 77: Service.Selector.matchExpressions:type_name -> MatchExpression
	7,  // 78: Cluster.Selector.matchName:type_name -> MatchName
	66, // 79: Cluster.Selector.matchLabels:type_name -> Cluster.Selector.MatchLabelsEntry
	68, // 80: NetworkDomain.Selector.matchLabels:type_name -> NetworkDomain.Selector.MatchLabelsEntry
	10, // 81: NetworkDomain.Selector.matchID:type_name -> MatchId
	7,  // 82: NetworkDomain.Selector.matchName:type_name -> MatchName
	11, // 83: NetworkDomain.Selector.matchOwner:type_name -> MatchOwner
	70, // 84: AccessPolicySelector.Selector.matchName:type_name -> AccessPolicySelector.MatchName
	71, // 85: AccessPolicySelector.Selector.matchId:type_name -> AccessPolicySelector.MatchId
	72, // 86: AccessPolicySelector.Selector.matchLabels:type_name -> AccessPolicySelector.Selector.MatchLabelsEntry
	87, // [87:87] is the sub-list for method output_type
	87, // [87:87] is the sub-list for method input_type
	87, // [87:87] is the sub-list for extension type_name
	87, // [87:87] is the sub-list for extension extendee
	0,  // [0:87] is the sub-list for field type_name
}

func init() { file_app_connection_proto_init() }
func file_app_connection_proto_init() {
	if File_app_connection_proto != nil {
		return
	}
	file_common_proto_init()
	file_cloud_request_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_app_connection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSubnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPolicySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkAccessControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDisconnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDisconnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchedResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchedResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppConnectionPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppConnectionPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConnectionPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppConnectionPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppConnectionPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppConnectionPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppConnectionPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSubnet_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceKind_K8SService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceKind_VMService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomain_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicySelector_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicySelector_MatchName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicySelector_MatchId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPolicySelector_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkDomainConnection_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPolicy_Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_connection_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConnectionResponseMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_connection_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_connection_proto_goTypes,
		DependencyIndexes: file_app_connection_proto_depIdxs,
		EnumInfos:         file_app_connection_proto_enumTypes,
		MessageInfos:      file_app_connection_proto_msgTypes,
	}.Build()
	File_app_connection_proto = out.File
	file_app_connection_proto_rawDesc = nil
	file_app_connection_proto_goTypes = nil
	file_app_connection_proto_depIdxs = nil
}
