// Copyright (c) 2023 Cisco Systems, Inc. and its affiliates
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http:www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.3
// source: cloud_request.proto

package awi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
	// Deprecated: Do not use.
	Tag    string            `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Vpc    string            `protobuf:"bytes,3,opt,name=Vpc,proto3" json:"Vpc,omitempty"`
	Zone   string            `protobuf:"bytes,4,opt,name=Zone,proto3" json:"Zone,omitempty"`
	Labels map[string]string `protobuf:"bytes,5,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Region string            `protobuf:"bytes,6,opt,name=Region,proto3" json:"Region,omitempty"`
}

func (x *ListInstancesRequest) Reset() {
	*x = ListInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesRequest) ProtoMessage() {}

func (x *ListInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListInstancesRequest) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{0}
}

func (x *ListInstancesRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

// Deprecated: Do not use.
func (x *ListInstancesRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ListInstancesRequest) GetVpc() string {
	if x != nil {
		return x.Vpc
	}
	return ""
}

func (x *ListInstancesRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ListInstancesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListInstancesRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*Instance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListInstancesResponse) Reset() {
	*x = ListInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResponse) ProtoMessage() {}

func (x *ListInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListInstancesResponse) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{1}
}

func (x *ListInstancesResponse) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	PublicIP  string            `protobuf:"bytes,3,opt,name=PublicIP,proto3" json:"PublicIP,omitempty"`
	PrivateIP string            `protobuf:"bytes,4,opt,name=PrivateIP,proto3" json:"PrivateIP,omitempty"`
	SubnetID  string            `protobuf:"bytes,5,opt,name=SubnetID,proto3" json:"SubnetID,omitempty"`
	VPCID     string            `protobuf:"bytes,6,opt,name=VPCID,proto3" json:"VPCID,omitempty"`
	State     string            `protobuf:"bytes,7,opt,name=State,proto3" json:"State,omitempty"`
	Labels    map[string]string `protobuf:"bytes,8,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{2}
}

func (x *Instance) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetPublicIP() string {
	if x != nil {
		return x.PublicIP
	}
	return ""
}

func (x *Instance) GetPrivateIP() string {
	if x != nil {
		return x.PrivateIP
	}
	return ""
}

func (x *Instance) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *Instance) GetVPCID() string {
	if x != nil {
		return x.VPCID
	}
	return ""
}

func (x *Instance) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Instance) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListSubnetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CIDR     string `protobuf:"bytes,1,opt,name=CIDR,proto3" json:"CIDR,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=Provider,proto3" json:"Provider,omitempty"`
	// Deprecated: Do not use.
	Tag    string            `protobuf:"bytes,3,opt,name=Tag,proto3" json:"Tag,omitempty"`
	VPCID  string            `protobuf:"bytes,4,opt,name=VPCID,proto3" json:"VPCID,omitempty"`
	Zone   string            `protobuf:"bytes,5,opt,name=Zone,proto3" json:"Zone,omitempty"`
	Labels map[string]string `protobuf:"bytes,6,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Region string            `protobuf:"bytes,7,opt,name=Region,proto3" json:"Region,omitempty"`
}

func (x *ListSubnetRequest) Reset() {
	*x = ListSubnetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubnetRequest) ProtoMessage() {}

func (x *ListSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubnetRequest.ProtoReflect.Descriptor instead.
func (*ListSubnetRequest) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{3}
}

func (x *ListSubnetRequest) GetCIDR() string {
	if x != nil {
		return x.CIDR
	}
	return ""
}

func (x *ListSubnetRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

// Deprecated: Do not use.
func (x *ListSubnetRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ListSubnetRequest) GetVPCID() string {
	if x != nil {
		return x.VPCID
	}
	return ""
}

func (x *ListSubnetRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ListSubnetRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListSubnetRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListSubnetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subnets []*Subnet `protobuf:"bytes,1,rep,name=subnets,proto3" json:"subnets,omitempty"`
}

func (x *ListSubnetResponse) Reset() {
	*x = ListSubnetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubnetResponse) ProtoMessage() {}

func (x *ListSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubnetResponse.ProtoReflect.Descriptor instead.
func (*ListSubnetResponse) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{4}
}

func (x *ListSubnetResponse) GetSubnets() []*Subnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

type Subnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId  string            `protobuf:"bytes,1,opt,name=SubnetId,proto3" json:"SubnetId,omitempty"`
	CidrBlock string            `protobuf:"bytes,2,opt,name=CidrBlock,proto3" json:"CidrBlock,omitempty"`
	VpcId     string            `protobuf:"bytes,3,opt,name=VpcId,proto3" json:"VpcId,omitempty"`
	Zone      string            `protobuf:"bytes,4,opt,name=Zone,proto3" json:"Zone,omitempty"`
	Name      string            `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Labels    map[string]string `protobuf:"bytes,8,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Subnet) Reset() {
	*x = Subnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subnet) ProtoMessage() {}

func (x *Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subnet.ProtoReflect.Descriptor instead.
func (*Subnet) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{5}
}

func (x *Subnet) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *Subnet) GetCidrBlock() string {
	if x != nil {
		return x.CidrBlock
	}
	return ""
}

func (x *Subnet) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *Subnet) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Subnet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subnet) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSiteRequest) Reset() {
	*x = ListSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSiteRequest) ProtoMessage() {}

func (x *ListSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSiteRequest.ProtoReflect.Descriptor instead.
func (*ListSiteRequest) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{6}
}

type ListSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites []*SiteDetail `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
}

func (x *ListSiteResponse) Reset() {
	*x = ListSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSiteResponse) ProtoMessage() {}

func (x *ListSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSiteResponse.ProtoReflect.Descriptor instead.
func (*ListSiteResponse) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{7}
}

func (x *ListSiteResponse) GetSites() []*SiteDetail {
	if x != nil {
		return x.Sites
	}
	return nil
}

type SiteDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	IP     string `protobuf:"bytes,3,opt,name=IP,proto3" json:"IP,omitempty"`
	SiteID string `protobuf:"bytes,4,opt,name=SiteID,proto3" json:"SiteID,omitempty"`
}

func (x *SiteDetail) Reset() {
	*x = SiteDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteDetail) ProtoMessage() {}

func (x *SiteDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteDetail.ProtoReflect.Descriptor instead.
func (*SiteDetail) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{8}
}

func (x *SiteDetail) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SiteDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteDetail) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *SiteDetail) GetSiteID() string {
	if x != nil {
		return x.SiteID
	}
	return ""
}

type ListVPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider   string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	AccountIDs string `protobuf:"bytes,3,opt,name=AccountIDs,proto3" json:"AccountIDs,omitempty"`
}

func (x *ListVPCRequest) Reset() {
	*x = ListVPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCRequest) ProtoMessage() {}

func (x *ListVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCRequest.ProtoReflect.Descriptor instead.
func (*ListVPCRequest) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{9}
}

func (x *ListVPCRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListVPCRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListVPCRequest) GetAccountIDs() string {
	if x != nil {
		return x.AccountIDs
	}
	return ""
}

type ListVPCTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Region   string `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	Tag      string `protobuf:"bytes,3,opt,name=Tag,proto3" json:"Tag,omitempty"`
}

func (x *ListVPCTagRequest) Reset() {
	*x = ListVPCTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPCTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCTagRequest) ProtoMessage() {}

func (x *ListVPCTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCTagRequest.ProtoReflect.Descriptor instead.
func (*ListVPCTagRequest) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{10}
}

func (x *ListVPCTagRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListVPCTagRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListVPCTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ListVPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VPCs []*VPC `protobuf:"bytes,1,rep,name=VPCs,proto3" json:"VPCs,omitempty"`
}

func (x *ListVPCResponse) Reset() {
	*x = ListVPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCResponse) ProtoMessage() {}

func (x *ListVPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCResponse.ProtoReflect.Descriptor instead.
func (*ListVPCResponse) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{11}
}

func (x *ListVPCResponse) GetVPCs() []*VPC {
	if x != nil {
		return x.VPCs
	}
	return nil
}

type VPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Tag         string            `protobuf:"bytes,3,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Region      string            `protobuf:"bytes,4,opt,name=Region,proto3" json:"Region,omitempty"`
	AccountName string            `protobuf:"bytes,5,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	Provider    string            `protobuf:"bytes,6,opt,name=Provider,proto3" json:"Provider,omitempty"`
	Labels      map[string]string `protobuf:"bytes,8,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VPC) Reset() {
	*x = VPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPC) ProtoMessage() {}

func (x *VPC) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPC.ProtoReflect.Descriptor instead.
func (*VPC) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{12}
}

func (x *VPC) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *VPC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VPC) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *VPC) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *VPC) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *VPC) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *VPC) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ListVPNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=Provider,proto3" json:"Provider,omitempty"`
}

func (x *ListVPNRequest) Reset() {
	*x = ListVPNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPNRequest) ProtoMessage() {}

func (x *ListVPNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPNRequest.ProtoReflect.Descriptor instead.
func (*ListVPNRequest) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{13}
}

func (x *ListVPNRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ListVPNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VPNs []*VPN `protobuf:"bytes,1,rep,name=VPNs,proto3" json:"VPNs,omitempty"`
}

func (x *ListVPNResponse) Reset() {
	*x = ListVPNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPNResponse) ProtoMessage() {}

func (x *ListVPNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPNResponse.ProtoReflect.Descriptor instead.
func (*ListVPNResponse) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{14}
}

func (x *ListVPNResponse) GetVPNs() []*VPN {
	if x != nil {
		return x.VPNs
	}
	return nil
}

type VPN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SegmentName string `protobuf:"bytes,2,opt,name=SegmentName,proto3" json:"SegmentName,omitempty"`
	SegmentID   string `protobuf:"bytes,3,opt,name=SegmentID,proto3" json:"SegmentID,omitempty"`
}

func (x *VPN) Reset() {
	*x = VPN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPN) ProtoMessage() {}

func (x *VPN) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPN.ProtoReflect.Descriptor instead.
func (*VPN) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{15}
}

func (x *VPN) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *VPN) GetSegmentName() string {
	if x != nil {
		return x.SegmentName
	}
	return ""
}

func (x *VPN) GetSegmentID() string {
	if x != nil {
		return x.SegmentID
	}
	return ""
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   string            `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ip        string            `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Labels    map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{16}
}

func (x *Pod) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Pod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pod) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Pod) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type K8SService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   string                `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace string                `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ingresses []*K8SService_Ingress `protobuf:"bytes,4,rep,name=ingresses,proto3" json:"ingresses,omitempty"`
	Labels    map[string]string     `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Id        string                `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *K8SService) Reset() {
	*x = K8SService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SService) ProtoMessage() {}

func (x *K8SService) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SService.ProtoReflect.Descriptor instead.
func (*K8SService) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{17}
}

func (x *K8SService) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *K8SService) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *K8SService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *K8SService) GetIngresses() []*K8SService_Ingress {
	if x != nil {
		return x.Ingresses
	}
	return nil
}

func (x *K8SService) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *K8SService) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type K8SService_Ingress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IP       string   `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	Ports    []string `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *K8SService_Ingress) Reset() {
	*x = K8SService_Ingress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_request_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SService_Ingress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SService_Ingress) ProtoMessage() {}

func (x *K8SService_Ingress) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_request_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SService_Ingress.ProtoReflect.Descriptor instead.
func (*K8SService_Ingress) Descriptor() ([]byte, []int) {
	return file_cloud_request_proto_rawDescGZIP(), []int{17, 0}
}

func (x *K8SService_Ingress) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *K8SService_Ingress) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *K8SService_Ingress) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

var File_cloud_request_proto protoreflect.FileDescriptor

var file_cloud_request_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x03, 0x54, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56,
	0x70, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x50,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49,
	0x50, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x50, 0x43, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x50,
	0x43, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8e, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x49, 0x44,
	0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x49, 0x44, 0x52, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x50, 0x43, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x50, 0x43, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x37, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0xe8, 0x01,
	0x0a, 0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x69, 0x64, 0x72, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x69, 0x64, 0x72, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x70, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x70, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x6f, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x22, 0x58, 0x0a, 0x0a, 0x53, 0x69, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x69, 0x74, 0x65, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x73, 0x22, 0x59, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x2b, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x04, 0x56, 0x50, 0x43, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x56, 0x50, 0x43, 0x52, 0x04, 0x56, 0x50, 0x43, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x03, 0x56,
	0x50, 0x43, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x56, 0x50, 0x43, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x4e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x22, 0x2b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x4e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x04, 0x56, 0x50, 0x4e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x04, 0x2e, 0x56, 0x50, 0x4e, 0x52, 0x04, 0x56, 0x50, 0x4e, 0x73, 0x22, 0x55,
	0x0a, 0x03, 0x56, 0x50, 0x4e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xc6, 0x01, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6f, 0x64, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd4,
	0x02, 0x0a, 0x0a, 0x4b, 0x38, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4b,
	0x38, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x09, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4b,
	0x38, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x4b, 0x0a,
	0x07, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xd0, 0x02, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12,
	0x40, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73,
	0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x69, 0x74, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x12, 0x0f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x35, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x50, 0x4e, 0x73, 0x12, 0x0f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x4e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x4e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x61,
	0x77, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_request_proto_rawDescOnce sync.Once
	file_cloud_request_proto_rawDescData = file_cloud_request_proto_rawDesc
)

func file_cloud_request_proto_rawDescGZIP() []byte {
	file_cloud_request_proto_rawDescOnce.Do(func() {
		file_cloud_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_request_proto_rawDescData)
	})
	return file_cloud_request_proto_rawDescData
}

var file_cloud_request_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_cloud_request_proto_goTypes = []interface{}{
	(*ListInstancesRequest)(nil),  // 0: ListInstancesRequest
	(*ListInstancesResponse)(nil), // 1: ListInstancesResponse
	(*Instance)(nil),              // 2: Instance
	(*ListSubnetRequest)(nil),     // 3: ListSubnetRequest
	(*ListSubnetResponse)(nil),    // 4: ListSubnetResponse
	(*Subnet)(nil),                // 5: Subnet
	(*ListSiteRequest)(nil),       // 6: ListSiteRequest
	(*ListSiteResponse)(nil),      // 7: ListSiteResponse
	(*SiteDetail)(nil),            // 8: SiteDetail
	(*ListVPCRequest)(nil),        // 9: ListVPCRequest
	(*ListVPCTagRequest)(nil),     // 10: ListVPCTagRequest
	(*ListVPCResponse)(nil),       // 11: ListVPCResponse
	(*VPC)(nil),                   // 12: VPC
	(*ListVPNRequest)(nil),        // 13: ListVPNRequest
	(*ListVPNResponse)(nil),       // 14: ListVPNResponse
	(*VPN)(nil),                   // 15: VPN
	(*Pod)(nil),                   // 16: Pod
	(*K8SService)(nil),            // 17: K8sService
	nil,                           // 18: ListInstancesRequest.LabelsEntry
	nil,                           // 19: Instance.LabelsEntry
	nil,                           // 20: ListSubnetRequest.LabelsEntry
	nil,                           // 21: Subnet.LabelsEntry
	nil,                           // 22: VPC.LabelsEntry
	nil,                           // 23: Pod.LabelsEntry
	(*K8SService_Ingress)(nil),    // 24: K8sService.Ingress
	nil,                           // 25: K8sService.LabelsEntry
}
var file_cloud_request_proto_depIdxs = []int32{
	18, // 0: ListInstancesRequest.Labels:type_name -> ListInstancesRequest.LabelsEntry
	2,  // 1: ListInstancesResponse.instances:type_name -> Instance
	19, // 2: Instance.Labels:type_name -> Instance.LabelsEntry
	20, // 3: ListSubnetRequest.Labels:type_name -> ListSubnetRequest.LabelsEntry
	5,  // 4: ListSubnetResponse.subnets:type_name -> Subnet
	21, // 5: Subnet.Labels:type_name -> Subnet.LabelsEntry
	8,  // 6: ListSiteResponse.sites:type_name -> SiteDetail
	12, // 7: ListVPCResponse.VPCs:type_name -> VPC
	22, // 8: VPC.Labels:type_name -> VPC.LabelsEntry
	15, // 9: ListVPNResponse.VPNs:type_name -> VPN
	23, // 10: Pod.labels:type_name -> Pod.LabelsEntry
	24, // 11: K8sService.ingresses:type_name -> K8sService.Ingress
	25, // 12: K8sService.labels:type_name -> K8sService.LabelsEntry
	0,  // 13: Cloud.ListInstances:input_type -> ListInstancesRequest
	3,  // 14: Cloud.ListSubnets:input_type -> ListSubnetRequest
	6,  // 15: Cloud.ListSites:input_type -> ListSiteRequest
	9,  // 16: Cloud.ListVPCs:input_type -> ListVPCRequest
	10, // 17: Cloud.ListVPCTags:input_type -> ListVPCTagRequest
	13, // 18: Cloud.ListVPNs:input_type -> ListVPNRequest
	1,  // 19: Cloud.ListInstances:output_type -> ListInstancesResponse
	4,  // 20: Cloud.ListSubnets:output_type -> ListSubnetResponse
	7,  // 21: Cloud.ListSites:output_type -> ListSiteResponse
	11, // 22: Cloud.ListVPCs:output_type -> ListVPCResponse
	11, // 23: Cloud.ListVPCTags:output_type -> ListVPCResponse
	14, // 24: Cloud.ListVPNs:output_type -> ListVPNResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_cloud_request_proto_init() }
func file_cloud_request_proto_init() {
	if File_cloud_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubnetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubnetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPCTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_request_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SService_Ingress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloud_request_proto_goTypes,
		DependencyIndexes: file_cloud_request_proto_depIdxs,
		MessageInfos:      file_cloud_request_proto_msgTypes,
	}.Build()
	File_cloud_request_proto = out.File
	file_cloud_request_proto_rawDesc = nil
	file_cloud_request_proto_goTypes = nil
	file_cloud_request_proto_depIdxs = nil
}
